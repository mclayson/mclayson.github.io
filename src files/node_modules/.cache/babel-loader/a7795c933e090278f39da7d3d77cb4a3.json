{"ast":null,"code":"import _classCallCheck from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matt/Work/Projul/projul-prototype/src/components/gantt.js\";\nimport React from 'react'; // import PropTypes from 'prop-types'\n\nimport ReactGantt from 'gantt-for-react';\n\nvar Gantt =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Gantt, _React$Component);\n\n  function Gantt(props) {\n    var _this;\n\n    _classCallCheck(this, Gantt);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Gantt).call(this, props));\n\n    _this.getTasks = function () {\n      // let names = [\n      //   [\"Redesign website\", [0, 7]],\n      //   [\"Write new content\", [1, 4]],\n      //   [\"Apply new styles\", [3, 6]],\n      //   [\"Review\", [7, 7]],\n      //   [\"Deploy\", [8, 9]],\n      //   [\"Go Live!\", [10, 10]]\n      // ];\n      var tasks = _this.props.tasks.map(function (task, i) {\n        // let today = new Date();\n        // let start = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n        // let end = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n        // start.setDate(today.getDate() + name[1][0]);\n        // end.setDate(today.getDate() + name[1][1]);\n        return {\n          start: new Date(task.start),\n          end: new Date(task.end),\n          name: task.title,\n          id: \"Task \" + i,\n          progress: parseInt(Math.random() * 100, 10)\n        };\n      }); // tasks[1].dependencies = \"Task 0\";\n      // tasks[2].dependencies = \"Task 1, Task 0\";\n      // tasks[3].dependencies = \"Task 2\";\n      // tasks[5].dependencies = \"Task 4\";\n      //\n      // tasks[0].custom_class = \"bar-milestone\";\n      // tasks[0].progress = 60;\n\n\n      return tasks;\n    };\n\n    _this.customPopupHtml = function (task) {\n      console.log(task);\n      var end_date = \"\"; //task._end.format('MMM D');\n\n      return \"\\n      <div class=\\\"details-container\\\">\\n        <h5>\".concat(task.name, \"</h5>\\n        <p>Expected to finish by \").concat(end_date, \"</p>\\n        <p>\").concat(task.progress, \"% completed!</p>\\n      </div>\\n    \");\n    };\n\n    _this.state = {\n      viewMode: 'Day',\n      tasks: _this.getTasks()\n    };\n    return _this;\n  }\n\n  _createClass(Gantt, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // window.setInterval(function() {\n      this.setState({\n        viewMode: \"Quarter Day\" //['Quarter Day', 'Half Day', 'Day', 'Week', 'Month'][parseInt(Math.random() * 5 + 1,10) - 1],\n        //tasks: this.getTasks()//.slice(0, parseInt(Math.random() * 4 + 1,10))\n\n      }); // }.bind(this), 5000)\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"examples\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"parent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \" render ReactGantt Component \"), React.createElement(\"div\", {\n        style: {\n          overflow: 'scroll'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.props.tasks.length > 0 && React.createElement(ReactGantt, {\n        tasks: this.getTasks(),\n        viewMode: this.state.viewMode,\n        customPopupHtml: this.customPopupHtml,\n        scrollOffsets: this.state.scrollOffsets,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Gantt;\n}(React.Component);\n\nexport default Gantt;","map":{"version":3,"sources":["/Users/matt/Work/Projul/projul-prototype/src/components/gantt.js"],"names":["React","ReactGantt","Gantt","props","getTasks","tasks","map","task","i","start","Date","end","name","title","id","progress","parseInt","Math","random","customPopupHtml","console","log","end_date","state","viewMode","setState","overflow","length","scrollOffsets","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,UAkBnBC,QAlBmB,GAkBR,YAAM;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,UAAIC,KAAK,GAAG,MAAKF,KAAL,CAAWE,KAAX,CAAiBC,GAAjB,CAAqB,UAASC,IAAT,EAAeC,CAAf,EAAkB;AACjD;AACA;AACA;AACA;AACA;AACA,eAAO;AACLC,UAAAA,KAAK,EAAE,IAAIC,IAAJ,CAASH,IAAI,CAACE,KAAd,CADF;AAELE,UAAAA,GAAG,EAAE,IAAID,IAAJ,CAASH,IAAI,CAACI,GAAd,CAFA;AAGLC,UAAAA,IAAI,EAAEL,IAAI,CAACM,KAHN;AAILC,UAAAA,EAAE,EAAE,UAAUN,CAJT;AAKLO,UAAAA,QAAQ,EAAEC,QAAQ,CAACC,IAAI,CAACC,MAAL,KAAgB,GAAjB,EAAsB,EAAtB;AALb,SAAP;AAOD,OAbW,CAAZ,CAVe,CAwBf;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,aAAOb,KAAP;AACD,KAlDkB;;AAAA,UAoDnBc,eApDmB,GAoDD,UAAAZ,IAAI,EAAI;AACxBa,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACA,UAAMe,QAAQ,GAAG,EAAjB,CAFwB,CAEJ;;AACpB,8EAEUf,IAAI,CAACK,IAFf,qDAG+BU,QAH/B,8BAISf,IAAI,CAACQ,QAJd;AAOD,KA9DkB;;AAGjB,UAAKQ,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXnB,MAAAA,KAAK,EAAE,MAAKD,QAAL;AAFI,KAAb;AAHiB;AAOlB;;;;wCAEmB;AAClB;AACE,WAAKqB,QAAL,CAAc;AACZD,QAAAA,QAAQ,EAAE,aADE,CACY;AACxB;;AAFY,OAAd,EAFgB,CAMlB;AACD;;;6BAgDQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,EAEE;AAAK,QAAA,KAAK,EAAE;AAACE,UAAAA,QAAQ,EAAE;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKvB,KAAL,CAAWE,KAAX,CAAiBsB,MAAjB,GAAwB,CAAxB,IACA,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE,KAAKvB,QAAL,EAAnB;AACY,QAAA,QAAQ,EAAE,KAAKmB,KAAL,CAAWC,QADjC;AAEY,QAAA,eAAe,EAAE,KAAKL,eAFlC;AAGY,QAAA,aAAa,EAAE,KAAKI,KAAL,CAAWK,aAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFF,CADF,CADF;AAgBD;;;;EAlFiB5B,KAAK,CAAC6B,S;;AAuF1B,eAAe3B,KAAf","sourcesContent":["import React from 'react'\n// import PropTypes from 'prop-types'\nimport ReactGantt from 'gantt-for-react';\n\nclass Gantt extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      viewMode: 'Day',\n      tasks: this.getTasks(),\n    };\n  }\n\n  componentDidMount() {\n    // window.setInterval(function() {\n      this.setState({\n        viewMode: \"Quarter Day\",//['Quarter Day', 'Half Day', 'Day', 'Week', 'Month'][parseInt(Math.random() * 5 + 1,10) - 1],\n        //tasks: this.getTasks()//.slice(0, parseInt(Math.random() * 4 + 1,10))\n      });\n    // }.bind(this), 5000)\n  };\n\n  getTasks = () => {\n    // let names = [\n    //   [\"Redesign website\", [0, 7]],\n    //   [\"Write new content\", [1, 4]],\n    //   [\"Apply new styles\", [3, 6]],\n    //   [\"Review\", [7, 7]],\n    //   [\"Deploy\", [8, 9]],\n    //   [\"Go Live!\", [10, 10]]\n    // ];\n\n    let tasks = this.props.tasks.map(function(task, i) {\n      // let today = new Date();\n      // let start = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n      // let end = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n      // start.setDate(today.getDate() + name[1][0]);\n      // end.setDate(today.getDate() + name[1][1]);\n      return {\n        start: new Date(task.start),\n        end: new Date(task.end),\n        name: task.title,\n        id: \"Task \" + i,\n        progress: parseInt(Math.random() * 100, 10)\n      }\n    });\n    // tasks[1].dependencies = \"Task 0\";\n    // tasks[2].dependencies = \"Task 1, Task 0\";\n    // tasks[3].dependencies = \"Task 2\";\n    // tasks[5].dependencies = \"Task 4\";\n    //\n    // tasks[0].custom_class = \"bar-milestone\";\n    // tasks[0].progress = 60;\n    return tasks;\n  };\n\n  customPopupHtml = task => {\n    console.log(task);\n    const end_date = \"\";//task._end.format('MMM D');\n    return `\n      <div class=\"details-container\">\n        <h5>${task.name}</h5>\n        <p>Expected to finish by ${end_date}</p>\n        <p>${task.progress}% completed!</p>\n      </div>\n    `;\n  };\n\n  render() {\n    return (\n      <div className='examples'>\n        <div className='parent'>\n          <label> render ReactGantt Component </label>\n          <div style={{overflow: 'scroll'}}>\n            { this.props.tasks.length>0 &&\n              <ReactGantt tasks={this.getTasks()}\n                          viewMode={this.state.viewMode}\n                          customPopupHtml={this.customPopupHtml}\n                          scrollOffsets={this.state.scrollOffsets}\n              />\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default Gantt\n"]},"metadata":{},"sourceType":"module"}