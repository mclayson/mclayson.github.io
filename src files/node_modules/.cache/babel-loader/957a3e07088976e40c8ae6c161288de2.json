{"ast":null,"code":"import _classCallCheck from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matt/Work/Projul/projul-prototype/src/components/task-details.js\";\nimport React from 'react';\nimport Editor from './editor';\nimport Scheduler from './scheduler';\nimport { JobsById } from '../utilities/content';\n\nvar JobDetails =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(JobDetails, _React$Component);\n\n  function JobDetails() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, JobDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(JobDetails)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      detail_mode: \"schedule\"\n    };\n\n    _this.handleJobClick = function (project_id, id) {\n      _this.props.handleJobClick(project_id, id);\n    };\n\n    return _this;\n  }\n\n  _createClass(JobDetails, [{\n    key: \"changeMode\",\n    value: function changeMode(mode) {\n      this.setState({\n        detail_mode: mode\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"task-detail-panel\" + (this.props.selected_task ? \"\" : \" open\") + \" show-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, this.props.selected_task ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, JobsById[this.props.selected_task].name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: this.state.detail_mode === \"task\" ? \"selected\" : \"\",\n        onClick: function onClick() {\n          _this2.changeMode(\"task\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"add/edit tasks\"), React.createElement(\"button\", {\n        className: this.state.detail_mode === \"schedule\" ? \"selected\" : \"\",\n        onClick: function onClick() {\n          _this2.changeMode(\"schedule\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"schedule job\"), React.createElement(\"button\", {\n        className: this.state.detail_mode === \"note\" ? \"selected\" : \"\",\n        onClick: function onClick() {\n          _this2.changeMode(\"note\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"take notes\"))), React.createElement(\"div\", {\n        className: \"tab-panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: this.state.detail_mode === \"note\" ? \"show\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.state.detail_mode === \"note\" ? React.createElement(Editor, {\n        value: \"These are some notes!\",\n        onChange: function onChange(value) {\n          console.log(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }) : []), React.createElement(\"div\", {\n        className: this.state.detail_mode === \"task\" ? \"show\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.state.detail_mode === \"task\" ? React.createElement(Scheduler, {\n        selected_task: this.props.selected_task,\n        selected_task_data: JobsById[this.props.selected_task],\n        default_trade: JobsById[this.props.selected_task].default_trade,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }) : []), React.createElement(\"div\", {\n        className: this.state.detail_mode === \"schedule\" ? \"show\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.detail_mode === \"schedule\" ? React.createElement(Scheduler, {\n        selected_task: this.props.selected_task,\n        selected_task_data: JobsById[this.props.selected_task],\n        default_trade: JobsById[this.props.selected_task].default_trade,\n        handleJobClick: this.handleJobClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }) : [])))) : []);\n    }\n  }]);\n\n  return JobDetails;\n}(React.Component);\n\nexport default JobDetails;","map":{"version":3,"sources":["/Users/matt/Work/Projul/projul-prototype/src/components/task-details.js"],"names":["React","Editor","Scheduler","JobsById","JobDetails","state","detail_mode","handleJobClick","project_id","id","props","mode","setState","selected_task","name","changeMode","value","console","log","default_trade","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Editor from './editor'\nimport Scheduler from './scheduler'\nimport {JobsById} from '../utilities/content'\n\nclass JobDetails extends React.Component {\n  state = {\n    detail_mode: \"schedule\"\n  }\n\n  changeMode (mode) {\n    this.setState({\n      detail_mode: mode\n    });\n  }\n  handleJobClick = (project_id, id) => {\n    this.props.handleJobClick(project_id, id);\n  }\n\n  render () {\n    return (\n      <div className={\"task-detail-panel\" +\n        (this.props.selected_task?\"\":\" open\") +\n        (\" show-content\")\n      }>\n        { this.props.selected_task?(\n          <div>\n            <div>\n              <header>\n                <h2>{JobsById[this.props.selected_task].name}</h2>\n                <div>\n                  <button className={this.state.detail_mode === \"task\"?\"selected\":\"\"} onClick={()=>{this.changeMode(\"task\")}}>add/edit tasks</button>\n                  <button className={this.state.detail_mode === \"schedule\"?\"selected\":\"\"} onClick={()=>{this.changeMode(\"schedule\")}}>schedule job</button>\n                  <button className={this.state.detail_mode === \"note\"?\"selected\":\"\"} onClick={()=>{this.changeMode(\"note\")}}>take notes</button>\n                </div>\n              </header>\n              <div className=\"tab-panel\">\n                <div className={this.state.detail_mode === \"note\"?\"show\":\"\"}>\n                  {\n                    this.state.detail_mode === \"note\"?\n                      (<Editor\n                        value=\"These are some notes!\"\n                        onChange={(value)=>{console.log(value);}}\n                      />)\n                    :\n                      []\n                  }\n                </div>\n                <div className={this.state.detail_mode === \"task\"?\"show\":\"\"}>\n                  {\n                    this.state.detail_mode === \"task\"?\n                      (<Scheduler\n                        selected_task={this.props.selected_task}\n                        selected_task_data={JobsById[this.props.selected_task]}\n                        default_trade={JobsById[this.props.selected_task].default_trade}\n                       />)\n                    :\n                      []\n                  }\n                </div>\n                <div className={this.state.detail_mode === \"schedule\"?\"show\":\"\"}>\n                  {\n                    this.state.detail_mode === \"schedule\"?\n                      (<Scheduler\n                        selected_task={this.props.selected_task}\n                        selected_task_data={JobsById[this.props.selected_task]}\n                        default_trade={JobsById[this.props.selected_task].default_trade}\n                        handleJobClick={this.handleJobClick}\n                       />)\n                    :\n                      []\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        ):[]}\n      </div>\n    );\n  }\n}\n\nexport default JobDetails\n"]},"metadata":{},"sourceType":"module"}