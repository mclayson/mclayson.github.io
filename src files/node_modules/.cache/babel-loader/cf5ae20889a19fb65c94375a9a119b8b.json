{"ast":null,"code":"import _objectSpread from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar tasks = function tasks() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TASK':\n      return _toConsumableArray(state).concat([_objectSpread({\n        id: action.id,\n        completed: false\n      }, action.task)]);\n\n    case 'TOGGLE_TODO':\n      return state.map(function (task) {\n        return task.id === action.id ? _objectSpread({}, task, {\n          completed: !task.completed\n        }) : task;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default tasks;","map":{"version":3,"sources":["/Users/matt/Work/Projul/projul-prototype/src/reducers/todos.js"],"names":["tasks","state","action","type","id","completed","task","map"],"mappings":";;;AAAA,IAAMA,KAAK,GAAG,SAARA,KAAQ,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,gCACKF,KADL;AAGIG,QAAAA,EAAE,EAAEF,MAAM,CAACE,EAHf;AAIIC,QAAAA,SAAS,EAAE;AAJf,SAKOH,MAAM,CAACI,IALd;;AAQF,SAAK,aAAL;AACE,aAAOL,KAAK,CAACM,GAAN,CAAU,UAAAD,IAAI;AAAA,eAClBA,IAAI,CAACF,EAAL,KAAYF,MAAM,CAACE,EAApB,qBACQE,IADR;AACcD,UAAAA,SAAS,EAAE,CAACC,IAAI,CAACD;AAD/B,aAEIC,IAHe;AAAA,OAAd,CAAP;;AAKF;AACE,aAAOL,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,eAAeD,KAAf","sourcesContent":["const tasks = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TASK':\n      return [\n        ...state,\n        {\n          id: action.id,\n          completed: false,\n          ...action.task\n        }\n      ]\n    case 'TOGGLE_TODO':\n      return state.map(task =>\n        (task.id === action.id)\n          ? {...task, completed: !task.completed}\n          : task\n      )\n    default:\n      return state\n  }\n}\n\nexport default tasks\n"]},"metadata":{},"sourceType":"module"}