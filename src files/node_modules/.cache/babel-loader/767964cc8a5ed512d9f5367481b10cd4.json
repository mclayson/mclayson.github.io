{"ast":null,"code":"import _toConsumableArray from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matt/Work/Projul/projul-prototype/src/components/task-editor.js\";\nimport React from 'react';\n\nvar TaskEditor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TaskEditor, _React$Component);\n\n  function TaskEditor() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TaskEditor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TaskEditor)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tasks: [],\n      add_task_text: \"\",\n      temp_edit_text: \"\",\n      currently_editing: 0\n    };\n\n    _this.handleTaskClick = function (e) {\n      var id = e.currentTarget.dataset.id;\n\n      if (_this.state.currently_editing !== id) {\n        var tasks = _toConsumableArray(_this.state.tasks);\n\n        for (var t = 0; t < tasks.length; t++) {\n          var task = tasks[t];\n\n          if (task.id === id) {\n            task.completed = !task.completed;\n          }\n        }\n\n        _this.updateTasks(tasks);\n      }\n    };\n\n    _this.handleCompleteAll = function () {\n      var tasks = _toConsumableArray(_this.state.tasks);\n\n      for (var t = 0; t < tasks.length; t++) {\n        var task = tasks[t];\n        task.completed = true;\n      }\n\n      _this.updateTasks(tasks);\n    };\n\n    _this.handleDelete = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var id = e.currentTarget.parentNode.parentNode.dataset.id;\n      var tasks = [];\n\n      for (var t = 0; t < _this.state.tasks.length; t++) {\n        var task = _this.state.tasks[t];\n\n        if (task.id !== id) {\n          tasks.push(_this.state.tasks[t]);\n        }\n      }\n\n      _this.updateTasks(tasks);\n    };\n\n    _this.handleAddKeyPress = function (e) {\n      if (e.key === 'Enter') {\n        _this.handleAddTask();\n      }\n    };\n\n    _this.handleAddChange = function (e) {\n      _this.setState({\n        add_task_text: e.currentTarget.value\n      });\n    };\n\n    _this.handleAddTask = function (e) {\n      if (_this.state.add_task_text) {\n        var tasks = _toConsumableArray(_this.state.tasks);\n\n        tasks.push({\n          id: Math.random() + \"\",\n          name: _this.state.add_task_text,\n          completed: false\n        });\n\n        _this.updateTasks(tasks);\n\n        _this.setState({\n          add_task_text: \"\"\n        });\n      }\n    };\n\n    _this.handleEdit = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var id = e.currentTarget.parentNode.parentNode.dataset.id;\n      var name = \"\";\n\n      for (var t = 0; t < _this.state.tasks.length; t++) {\n        var task = _this.state.tasks[t];\n\n        if (task.id === id) {\n          name = _this.state.tasks[t].name;\n        }\n      }\n\n      _this.setState({\n        currently_editing: id,\n        temp_edit_text: name\n      });\n    };\n\n    _this.handleEditKeyPress = function (e) {\n      if (e.key === 'Enter') {\n        _this.handleConfirmEdit(e);\n      }\n    };\n\n    _this.handleEditChange = function (e) {\n      _this.setState({\n        temp_edit_text: e.currentTarget.value\n      });\n    };\n\n    _this.handleCancelEdit = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _this.setState({\n        currently_editing: null\n      });\n    };\n\n    _this.handleConfirmEdit = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var id = _this.state.currently_editing;\n\n      var tasks = _toConsumableArray(_this.state.tasks);\n\n      for (var t = 0; t < tasks.length; t++) {\n        var task = tasks[t];\n\n        if (task.id === id) {\n          tasks[t].name = _this.state.temp_edit_text;\n        }\n      }\n\n      _this.updateTasks(tasks);\n\n      _this.setState({\n        currently_editing: null\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TaskEditor, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        tasks: _toConsumableArray(this.props.selected_job_data.tasks)\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.selected_job_data && this.props.selected_job !== prevProps.selected_job) {\n        this.setState({\n          tasks: _toConsumableArray(this.props.selected_job_data.tasks)\n        });\n      }\n    }\n  }, {\n    key: \"updateTasks\",\n    value: function updateTasks(tasks) {\n      // this.props.selected_job_data.tasks = tasks;\n      this.props.updateJobProgress(this.props.selected_job, tasks);\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }, {\n    key: \"changeMode\",\n    value: function changeMode(mode) {\n      this.setState({\n        mode: mode\n      });\n    }\n  }, {\n    key: \"getMenu\",\n    value: function getMenu() {\n      var _this2 = this;\n\n      var menu = React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"task name\",\n        value: this.state.add_task_text,\n        onChange: this.handleAddChange,\n        onKeyPress: this.handleAddKeyPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          _this2.handleAddTask(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"add task\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          _this2.handleCompleteAll(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"mark all as complete\"))));\n      return menu;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tasks = _toConsumableArray(this.state.tasks);\n\n      var task_nodes = [];\n\n      for (var t = 0; t < tasks.length; t++) {\n        task_nodes.push(React.createElement(\"li\", {\n          key: this.props.selected_job + \"_\" + tasks[t].id,\n          className: \"task\" + (tasks[t].completed ? \" completed\" : \"\") + (tasks[t].id === this.state.currently_editing ? \" currently-editing\" : \"\"),\n          \"data-id\": tasks[t].id,\n          onClick: this.handleTaskClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"icon-holder\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-check-circle check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }), React.createElement(\"i\", {\n          className: \"far fa-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        })), this.state.currently_editing === tasks[t].id ? React.createElement(\"input\", {\n          className: \"\",\n          defaultValue: tasks[t].name,\n          onChange: this.handleEditChange,\n          onKeyPress: this.handleEditKeyPress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }) : React.createElement(\"span\", {\n          className: \"task-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, tasks[t].name)), this.state.currently_editing === tasks[t].id ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"icon-button\",\n          onClick: this.handleConfirmEdit,\n          title: \"Apply\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"icon-button\",\n          onClick: this.handleCancelEdit,\n          title: \"Cancel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-times\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }))) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"icon-button\",\n          onClick: this.handleEdit,\n          title: \"Edit Task\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"icon-button\",\n          onClick: this.handleDelete,\n          title: \"Delete Task\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-trash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        })))));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"task-editor\" + (this.state.loaded ? \"\" : \" loading\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, this.getMenu(), React.createElement(\"div\", {\n        className: \"task-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, task_nodes)));\n    }\n  }]);\n\n  return TaskEditor;\n}(React.Component);\n\nexport default TaskEditor;","map":{"version":3,"sources":["/Users/matt/Work/Projul/projul-prototype/src/components/task-editor.js"],"names":["React","TaskEditor","state","tasks","add_task_text","temp_edit_text","currently_editing","handleTaskClick","e","id","currentTarget","dataset","t","length","task","completed","updateTasks","handleCompleteAll","handleDelete","preventDefault","stopPropagation","parentNode","push","handleAddKeyPress","key","handleAddTask","handleAddChange","setState","value","Math","random","name","handleEdit","handleEditKeyPress","handleConfirmEdit","handleEditChange","handleCancelEdit","props","selected_job_data","prevProps","selected_job","updateJobProgress","mode","menu","task_nodes","loaded","getMenu","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n\nclass TaskEditor extends React.Component {\n  state = {\n    tasks:[],\n    add_task_text: \"\",\n    temp_edit_text: \"\",\n    currently_editing: 0\n  };\n\n  componentDidMount() {\n    this.setState({\n      tasks: [...this.props.selected_job_data.tasks]\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.selected_job_data && this.props.selected_job !== prevProps.selected_job) {\n      this.setState({\n        tasks: [...this.props.selected_job_data.tasks]\n      });\n    }\n  }\n\n  handleTaskClick = (e) => {\n    let id=e.currentTarget.dataset.id;\n    if (this.state.currently_editing !== id) {\n      let tasks = [...this.state.tasks];\n      for (var t=0; t<tasks.length; t++) {\n        var task = tasks[t];\n        if (task.id === id) {\n          task.completed = !task.completed;\n        }\n      }\n      this.updateTasks(tasks);\n    }\n  }\n\n  handleCompleteAll = () => {\n    let tasks = [...this.state.tasks];\n    for (var t=0; t<tasks.length; t++) {\n      var task = tasks[t];\n      task.completed = true;\n    }\n    this.updateTasks(tasks);\n  }\n\n  handleDelete = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    let id=e.currentTarget.parentNode.parentNode.dataset.id;\n    let tasks = [];\n    for (var t=0; t<this.state.tasks.length; t++) {\n      var task = this.state.tasks[t];\n      if (task.id !== id) {\n        tasks.push(this.state.tasks[t]);\n      }\n    }\n    this.updateTasks(tasks);\n  }\n\n\n  handleAddKeyPress = (e) => {\n    if(e.key === 'Enter'){\n      this.handleAddTask();\n    }\n  }\n\n  handleAddChange = (e) => {\n    this.setState({\n      add_task_text: e.currentTarget.value\n    });\n  }\n\n  handleAddTask = (e) => {\n    if (this.state.add_task_text) {\n      let tasks = [...this.state.tasks];\n      tasks.push({\n        id: Math.random()+\"\",\n        name: this.state.add_task_text,\n        completed: false\n      });\n      this.updateTasks(tasks);\n      this.setState({\n        add_task_text: \"\"\n      });\n    }\n  }\n\n\n  handleEdit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    let id=e.currentTarget.parentNode.parentNode.dataset.id;\n    let name = \"\";\n    for (var t=0; t<this.state.tasks.length; t++) {\n      const task = this.state.tasks[t];\n      if (task.id === id) {\n        name = this.state.tasks[t].name;\n      }\n    }\n    this.setState({\n      currently_editing: id,\n      temp_edit_text: name\n    });\n  }\n\n  handleEditKeyPress = (e) => {\n    if(e.key === 'Enter'){\n      this.handleConfirmEdit(e);\n    }\n  }\n\n  handleEditChange = (e) => {\n    this.setState({\n      temp_edit_text: e.currentTarget.value\n    });\n  }\n\n  handleCancelEdit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.setState({\n      currently_editing: null\n    });\n  }\n\n  handleConfirmEdit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    let id=this.state.currently_editing;\n    let tasks = [...this.state.tasks];\n    for (var t=0; t<tasks.length; t++) {\n      var task = tasks[t];\n      if (task.id === id) {\n        tasks[t].name = this.state.temp_edit_text;\n      }\n    }\n    this.updateTasks(tasks);\n    this.setState({\n      currently_editing: null\n    });\n  }\n\n  updateTasks (tasks) {\n    // this.props.selected_job_data.tasks = tasks;\n\n    this.props.updateJobProgress(this.props.selected_job, tasks);\n    this.setState({\n      tasks: tasks\n    });\n  }\n\n  changeMode (mode) {\n    this.setState({\n      mode: mode\n    });\n  }\n\n  getMenu () {\n    const menu = (\n      <div className=\"menu\">\n        <div>\n          <input type=\"text\" placeholder=\"task name\" value={this.state.add_task_text} onChange={this.handleAddChange} onKeyPress={this.handleAddKeyPress} />\n          <button onClick={(e)=>{this.handleAddTask(e)}}><i className=\"fas fa-plus\"></i><span>add task</span></button>\n        </div>\n        <div>\n          <button onClick={(e)=>{this.handleCompleteAll(e)}}><i className=\"fas fa-check\"></i><span>mark all as complete</span></button>\n        </div>\n      </div>\n    );\n    return menu;\n  }\n\n\n  render() {\n    let tasks = [...this.state.tasks];\n    let task_nodes = [];\n\n    for (var t=0; t<tasks.length; t++) {\n      task_nodes.push((\n        <li\n          key={this.props.selected_job + \"_\" + tasks[t].id}\n          className={\"task\" + (tasks[t].completed ? \" completed\" : \"\") + (tasks[t].id === this.state.currently_editing ? \" currently-editing\" : \"\")}\n          data-id={tasks[t].id} onClick={this.handleTaskClick}\n        >\n          <h3>\n            <span className=\"icon-holder\"><i className=\"fas fa-check-circle check\"></i><i className=\"far fa-circle\"></i></span>\n            {this.state.currently_editing === tasks[t].id ? (\n              <input className=\"\" defaultValue={tasks[t].name} onChange={this.handleEditChange} onKeyPress={this.handleEditKeyPress} />\n            ):(\n              <span className=\"task-name\">{tasks[t].name}</span>\n            )}\n          </h3>\n          {this.state.currently_editing === tasks[t].id ? (\n            <div>\n              <button className=\"icon-button\" onClick={this.handleConfirmEdit} title=\"Apply\"><i className=\"fas fa-check\"></i></button>\n              <button className=\"icon-button\" onClick={this.handleCancelEdit} title=\"Cancel\"><i className=\"fas fa-times\"></i></button>\n            </div>\n          ):(\n            <div>\n              <button className=\"icon-button\" onClick={this.handleEdit} title=\"Edit Task\"><i className=\"fas fa-edit\"></i></button>\n              <button className=\"icon-button\" onClick={this.handleDelete} title=\"Delete Task\"><i className=\"fas fa-trash\"></i></button>\n            </div>\n          )}\n        </li>\n      ));\n    }\n\n    return (\n      <div className={\"task-editor\" + (this.state.loaded?\"\":\" loading\")} >\n        {this.getMenu()}\n        <div className=\"task-list\">\n          <ul>{task_nodes}</ul>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default TaskEditor\n"]},"metadata":{},"sourceType":"module"}