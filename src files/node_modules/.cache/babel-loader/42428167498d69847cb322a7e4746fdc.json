{"ast":null,"code":"import _classCallCheck from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matt/Work/Projul/projul-prototype/src/components/calendar.js\";\nimport React from 'react'; // import PropTypes from 'prop-types'\n\nimport BigCalendar from 'react-big-calendar';\nimport moment from 'moment';\nvar localizer = BigCalendar.momentLocalizer(moment);\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Calendar, _React$Component);\n\n  function Calendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {//   events: [\n      //   {\n      //     id: 14,\n      //     title: 'Today',\n      //     start: new Date(new Date().setHours(new Date().getHours() - 3)),\n      //     end: new Date(new Date().setHours(new Date().getHours() + 3)),\n      //   }\n      // ]\n    };\n\n    _this.handleSelect = function (_ref) {\n      var start = _ref.start,\n          end = _ref.end;\n      var title = window.prompt('New Event name');\n      var task = {\n        start: start,\n        end: end,\n        title: title\n      };\n      if (title) _this.props.addTask(task); // this.setState({\n      //   events: [\n      //     ...this.state.events,\n      //     {\n      //       start:start,\n      //       end:end_date,\n      //       title:title,\n      //     },\n      //   ],\n      // })\n    };\n\n    _this.handleSelectEvent = function (event) {\n      console.log(event);\n      alert(event.title + \": \" + (event.end - event.start));\n    };\n\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"render\",\n    value: function render() {\n      // const { localizer } = this.props\n      return React.createElement(BigCalendar, {\n        selectable: true,\n        localizer: localizer,\n        events: this.props.tasks || [],\n        defaultView: BigCalendar.Views.MONTH,\n        scrollToTime: new Date(1970, 1, 1, 6),\n        defaultDate: new Date(),\n        onSelectEvent: this.handleSelectEvent,\n        onSelectSlot: this.handleSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Calendar;\n}(React.Component);\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/matt/Work/Projul/projul-prototype/src/components/calendar.js"],"names":["React","BigCalendar","moment","localizer","momentLocalizer","Calendar","state","handleSelect","start","end","title","window","prompt","task","props","addTask","handleSelectEvent","event","console","log","alert","tasks","Views","MONTH","Date","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,IAAMC,SAAS,GAAGF,WAAW,CAACG,eAAZ,CAA4BF,MAA5B,CAAlB;;IAEMG,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ,CACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARQ,K;;UAWRC,Y,GAAe,gBAAoB;AAAA,UAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,UAAVC,GAAU,QAAVA,GAAU;AACjC,UAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,gBAAd,CAAd;AACA,UAAMC,IAAI,GAAG;AACXL,QAAAA,KAAK,EAACA,KADK;AAEXC,QAAAA,GAAG,EAACA,GAFO;AAGXC,QAAAA,KAAK,EAACA;AAHK,OAAb;AAKA,UAAIA,KAAJ,EAEE,MAAKI,KAAL,CAAWC,OAAX,CAAmBF,IAAnB,EAT+B,CAW/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,K;;UAEDG,iB,GAAoB,UAACC,KAAD,EAAW;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAG,MAAAA,KAAK,CAACH,KAAK,CAACP,KAAN,GAAc,IAAd,IAAsBO,KAAK,CAACR,GAAN,GAAYQ,KAAK,CAACT,KAAxC,CAAD,CAAL;AACD,K;;;;;;;6BAEQ;AACP;AACA,aACE,oBAAC,WAAD;AACI,QAAA,UAAU,MADd;AAEI,QAAA,SAAS,EAAEL,SAFf;AAGI,QAAA,MAAM,EAAE,KAAKW,KAAL,CAAWO,KAAX,IAAoB,EAHhC;AAII,QAAA,WAAW,EAAEpB,WAAW,CAACqB,KAAZ,CAAkBC,KAJnC;AAKI,QAAA,YAAY,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CALlB;AAMI,QAAA,WAAW,EAAE,IAAIA,IAAJ,EANjB;AAOI,QAAA,aAAa,EAAE,KAAKR,iBAPxB;AAQI,QAAA,YAAY,EAAE,KAAKT,YARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAYD;;;;EAtDoBP,KAAK,CAACyB,S;;AA2D7B,eAAepB,QAAf","sourcesContent":["import React from 'react'\n// import PropTypes from 'prop-types'\nimport BigCalendar from 'react-big-calendar';\nimport moment from 'moment';\n\nconst localizer = BigCalendar.momentLocalizer(moment);\n\nclass Calendar extends React.Component {\n  state = {\n  //   events: [\n  //   {\n  //     id: 14,\n  //     title: 'Today',\n  //     start: new Date(new Date().setHours(new Date().getHours() - 3)),\n  //     end: new Date(new Date().setHours(new Date().getHours() + 3)),\n  //   }\n  // ]\n  }\n\n  handleSelect = ({ start, end }) => {\n    const title = window.prompt('New Event name')\n    const task = {\n      start:start,\n      end:end,\n      title:title\n    };\n    if (title)\n\n      this.props.addTask(task);\n\n      // this.setState({\n      //   events: [\n      //     ...this.state.events,\n      //     {\n      //       start:start,\n      //       end:end_date,\n      //       title:title,\n      //     },\n      //   ],\n      // })\n  }\n\n  handleSelectEvent = (event) => {\n    console.log(event);\n    alert(event.title + \": \" + (event.end - event.start));\n  }\n\n  render() {\n    // const { localizer } = this.props\n    return (\n      <BigCalendar\n          selectable\n          localizer={localizer}\n          events={this.props.tasks || []}\n          defaultView={BigCalendar.Views.MONTH}\n          scrollToTime={new Date(1970, 1, 1, 6)}\n          defaultDate={new Date()}\n          onSelectEvent={this.handleSelectEvent}\n          onSelectSlot={this.handleSelect}\n        />\n    );\n  }\n}\n\n\n\nexport default Calendar\n"]},"metadata":{},"sourceType":"module"}