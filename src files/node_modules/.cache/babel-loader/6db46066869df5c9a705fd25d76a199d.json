{"ast":null,"code":"import _objectSpread from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matt/Work/Projul/projul-prototype/src/components/project.js\";\nimport React from 'react';\nimport { MonthNames, TasksById } from '../utilities/content';\n\nvar Projects =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Projects, _React$Component);\n\n  function Projects() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Projects);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Projects)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loaded: false,\n      selected_task: \"none\"\n    };\n\n    _this.selectTask = function (e) {\n      var id = e.currentTarget.dataset.id; // if (this.state.selected_task!==id) {\n      // this.setState({\n      //   selected_task:id\n      // });\n\n      _this.props.onSelectProject(_this.props.id, id); // }\n\n    };\n\n    _this.handleCloseButton = function (e) {\n      _this.props.onSelectProject(null, null);\n    };\n\n    return _this;\n  }\n\n  _createClass(Projects, [{\n    key: \"getTaskData\",\n    value: function getTaskData() {\n      var months = {\n        Unscheduled: []\n      };\n      var tasks_by_id = {};\n      this.props.project_data.tasks.map(function (task_id, i) {\n        var task_insert = _objectSpread({}, TasksById[task_id]);\n\n        tasks_by_id[task_insert.id] = task_insert;\n\n        if (!task_insert.start_date) {\n          months.Unscheduled.push(task_insert);\n          return true;\n        }\n\n        var task_month = task_insert.start_date.getMonth();\n\n        if (!months[task_month]) {\n          months[task_month] = [];\n        }\n\n        months[task_month].push(task_insert);\n        return true;\n      });\n      return [tasks_by_id, months];\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var tasks_by_id = this.getTaskData();\n      this.setState({\n        tasks_by_id: tasks_by_id[0],\n        months: tasks_by_id[1],\n        selected_task: this.props.selected_task\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.selected_task !== prevProps.selected_task) {\n        this.setState({\n          selected_task: this.props.selected_task\n        });\n      }\n\n      if (this.props.project_data.id !== prevProps.project_data.id) {\n        var tasks_by_id = this.getTaskData();\n        this.setState({\n          tasks_by_id: tasks_by_id[0],\n          months: tasks_by_id[1],\n          selected_task: this.props.selected_task\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var display_months = [];\n\n      if (this.state.months) {\n        var month_keys = Object.keys(this.state.months);\n        var months = this.state.months;\n        var after_today = false;\n        month_keys.sort(function (a, b) {\n          return months[a] - months[b];\n        });\n\n        for (var i = 0; i < month_keys.length; i++) {\n          var month = this.state.months[month_keys[i]];\n          month.sort(function (a, b) {\n            return a.start_date - b.start_date;\n          });\n\n          for (var j = 0; j < month.length; j++) {\n            var task = month[j];\n            var mark_today = \"\";\n\n            if (!after_today && task.start_date && task.start_date >= new Date()) {\n              after_today = true;\n              mark_today = \" after-today\";\n            }\n\n            display_months.push(React.createElement(\"li\", {\n              key: task.id,\n              \"data-id\": task.id,\n              className: (task.progress === 100 ? \"complete\" : task.progress > 0 ? \"progress\" : \"\") + (\" \" + month_keys[i]) + (task.start_date && task.start_date.toDateString() === new Date().toDateString() ? \" today\" : \"\") + mark_today + (j === month.length - 1 ? \" last-of-month\" : \"\") + (task.id === this.state.selected_task ? \" selected\" : \" not-selected\") + (j < month.length - 1 && month[j + 1].id === this.state.selected_task ? \" task-before-selected\" : \"\"),\n              onClick: this.selectTask,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 95\n              },\n              __self: this\n            }, j === 0 ? React.createElement(\"h3\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110\n              },\n              __self: this\n            }, MonthNames[month_keys[i]] || month_keys[i]) : [], React.createElement(\"span\", {\n              className: \"h-line\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              className: \"selected-arrow\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 113\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              className: \"date\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114\n              },\n              __self: this\n            }, task.start_date ? task.start_date.getDate() : \"\"), React.createElement(\"div\", {\n              className: \"task-box\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115\n              },\n              __self: this\n            }, React.createElement(\"h4\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: task.icon,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              className: \"task-name\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116\n              },\n              __self: this\n            }, task.name))), React.createElement(\"span\", {\n              className: \"status\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"progress-bar\",\n              style: {\n                transform: \"scaleX(\" + task.progress / 100 + \")\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 119\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              className: \"status-text\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 120\n              },\n              __self: this\n            }, task.progress === 100 ? React.createElement(\"i\", {\n              className: \"fas fa-check\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 122\n              },\n              __self: this\n            }) : task.progress === 0 ? \"\" : task.progress + \"%\"))));\n          }\n\n          ;\n        }\n\n        ;\n      }\n\n      return React.createElement(\"article\", {\n        className: \"project\" + (this.props.last_selected ? \" last_selected\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, this.props.project_data.name), this.props.selected_task && React.createElement(\"div\", {\n        className: \"button-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleCloseButton,\n        className: \"icon-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"header-color\",\n        style: {\n          backgroundColor: this.props.project_data.color || \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"timeline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, display_months));\n    }\n  }]);\n\n  return Projects;\n}(React.Component);\n\nexport default Projects;","map":{"version":3,"sources":["/Users/matt/Work/Projul/projul-prototype/src/components/project.js"],"names":["React","MonthNames","TasksById","Projects","state","loaded","selected_task","selectTask","e","id","currentTarget","dataset","props","onSelectProject","handleCloseButton","months","Unscheduled","tasks_by_id","project_data","tasks","map","task_id","i","task_insert","start_date","push","task_month","getMonth","getTaskData","setState","prevProps","display_months","month_keys","Object","keys","after_today","sort","a","b","length","month","j","task","mark_today","Date","progress","toDateString","getDate","icon","name","transform","last_selected","backgroundColor","color","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {MonthNames, TasksById} from '../utilities/content'\n\nclass Projects extends React.Component {\n  state = {\n    loaded: false,\n    selected_task: \"none\"\n  };\n\n  getTaskData () {\n    var months = {\n      Unscheduled: []\n    };\n    var tasks_by_id = {};\n    this.props.project_data.tasks.map((task_id, i) => {\n      let task_insert = {\n        ...(TasksById[task_id])\n      };\n      tasks_by_id[task_insert.id] = task_insert;\n      if (!task_insert.start_date) {\n        months.Unscheduled.push(task_insert);\n        return true;\n      }\n      let task_month = task_insert.start_date.getMonth();\n      if (!months[task_month]) {\n        months[task_month] = [];\n      }\n      months[task_month].push(task_insert);\n      return true;\n    });\n    return [tasks_by_id, months];\n  }\n\n  componentDidMount() {\n    var tasks_by_id = this.getTaskData();\n    this.setState({\n      tasks_by_id: tasks_by_id[0],\n      months: tasks_by_id[1],\n      selected_task:this.props.selected_task\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.selected_task !== prevProps.selected_task) {\n      this.setState({\n        selected_task:this.props.selected_task\n      });\n    }\n    if (this.props.project_data.id !== prevProps.project_data.id) {\n      var tasks_by_id = this.getTaskData();\n      this.setState({\n        tasks_by_id: tasks_by_id[0],\n        months: tasks_by_id[1],\n        selected_task:this.props.selected_task\n      });\n    }\n  }\n\n\n  selectTask = (e) => {\n    let id=e.currentTarget.dataset.id;\n\n    // if (this.state.selected_task!==id) {\n      // this.setState({\n      //   selected_task:id\n      // });\n      this.props.onSelectProject(this.props.id, id);\n    // }\n  }\n\n  handleCloseButton = (e) => {\n    this.props.onSelectProject(null, null);\n  }\n\n\n  render() {\n    var display_months = [];\n\n    if (this.state.months) {\n      var month_keys = Object.keys(this.state.months);\n      var months = this.state.months;\n      var after_today = false;\n      month_keys.sort(function(a, b){return months[a] - months[b]});\n      for (var i=0; i<month_keys.length; i++) {\n        var month = this.state.months[month_keys[i]];\n        month.sort(function(a, b){return a.start_date - b.start_date});\n        for (var j=0; j<month.length; j++) {\n          var task = month[j];\n          var mark_today = \"\";\n          if (!after_today && task.start_date && task.start_date >= new Date()) {\n            after_today = true;\n            mark_today = \" after-today\";\n          }\n          display_months.push((\n            <li\n              key={task.id}\n              data-id={task.id}\n              className={\n                (task.progress === 100 ? \"complete\" : task.progress > 0 ? \"progress\" : \"\") +\n                (\" \"+month_keys[i]) +\n                (task.start_date && (task.start_date.toDateString() === (new Date()).toDateString())?\" today\":\"\") +\n                mark_today +\n                (j === month.length-1?\" last-of-month\":\"\") +\n                (task.id===this.state.selected_task?\" selected\":\" not-selected\") +\n                ((j<month.length-1) && month[j+1].id===this.state.selected_task?\" task-before-selected\":\"\")\n              }\n              onClick={this.selectTask}\n            >\n              {\n                j===0?<h3>{MonthNames[month_keys[i]] || month_keys[i]}</h3>:[]\n              }\n              <span className=\"h-line\" />\n              <span className=\"selected-arrow\" />\n              <span className=\"date\">{(task.start_date ? task.start_date.getDate() : \"\")}</span>\n              <div className=\"task-box\">\n                <h4><i className={task.icon}></i><span className=\"task-name\">{task.name}</span></h4>\n              </div>\n              <span className=\"status\">\n                <span className=\"progress-bar\" style={{transform:\"scaleX(\"+(task.progress/100)+\")\"}}></span>\n                <span className=\"status-text\">{\n                  task.progress===100 ?\n                  (<i className=\"fas fa-check\"></i>):\n                  task.progress===0 ?\n                  (\"\"):\n                  (task.progress + \"%\")\n                }</span>\n              </span>\n            </li>\n          ));\n        };\n      };\n    }\n    return (\n      <article\n        className={\"project\" +\n          (this.props.last_selected?\" last_selected\":\"\")\n      }>\n        <header>\n          <h2>{this.props.project_data.name}</h2>\n\n            { this.props.selected_task && (\n              <div className=\"button-menu\">\n                <button onClick={this.handleCloseButton} className=\"icon-button\"><i className=\"fas fa-times\"></i></button>\n              </div>\n            )}\n        </header>\n        <div className=\"header-color\" style={{\n          backgroundColor: this.props.project_data.color || \"black\"\n        }} />\n        <div className=\"timeline\">\n          {display_months}\n        </div>\n      </article>\n    );\n  }\n}\n\nexport default Projects\n"]},"metadata":{},"sourceType":"module"}