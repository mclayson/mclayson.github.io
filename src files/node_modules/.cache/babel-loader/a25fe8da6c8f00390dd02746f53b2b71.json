{"ast":null,"code":"import _objectSpread from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matt/Work/Projul/projul-prototype/src/components/project.js\";\nimport React from 'react';\nimport { MonthNames, JobsById } from '../utilities/content';\n\nvar Projects =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Projects, _React$Component);\n\n  function Projects() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Projects);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Projects)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loaded: false,\n      selected_job: \"none\"\n    };\n\n    _this.selectJob = function (e) {\n      var id = e.currentTarget.dataset.id; // if (this.state.selected_job!==id) {\n      // this.setState({\n      //   selected_job:id\n      // });\n\n      _this.props.onSelectProject(_this.props.id, id); // }\n\n    };\n\n    _this.handleCloseButton = function (e) {\n      _this.props.onSelectProject(null, null);\n    };\n\n    return _this;\n  }\n\n  _createClass(Projects, [{\n    key: \"getJobData\",\n    value: function getJobData() {\n      var months = {\n        Unscheduled: []\n      };\n      var jobs_by_id = {};\n      this.props.project_data.jobs.map(function (job_id, i) {\n        var job_insert = _objectSpread({}, JobsById[job_id]);\n\n        jobs_by_id[job_insert.id] = job_insert;\n\n        if (!job_insert.start_date) {\n          months.Unscheduled.push(job_insert);\n          return true;\n        }\n\n        var job_month = job_insert.start_date.getMonth();\n\n        if (!months[job_month]) {\n          months[job_month] = [];\n        }\n\n        months[job_month].push(job_insert);\n        return true;\n      });\n      return [jobs_by_id, months];\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var jobs_by_id = this.getJobData();\n      this.setState({\n        jobs_by_id: jobs_by_id[0],\n        months: jobs_by_id[1],\n        selected_job: this.props.selected_job\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.selected_job !== prevProps.selected_job) {\n        this.setState({\n          selected_job: this.props.selected_job\n        });\n      }\n\n      if (this.props.project_data.id !== prevProps.project_data.id || this.props.refresh !== prevProps.refresh) {\n        var jobs_by_id = this.getJobData();\n        this.setState({\n          jobs_by_id: jobs_by_id[0],\n          months: jobs_by_id[1],\n          selected_job: this.props.selected_job\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var display_months = [];\n      var today = new Date();\n\n      if (this.state.months) {\n        var month_keys = Object.keys(this.state.months);\n        var months = this.state.months;\n        var after_today = false;\n        month_keys.sort(function (a, b) {\n          return months[a] - months[b];\n        });\n\n        for (var i = 0; i < month_keys.length; i++) {\n          var month = this.state.months[month_keys[i]];\n          month.sort(function (a, b) {\n            return a.start_date - b.start_date;\n          });\n\n          for (var j = 0; j < month.length; j++) {\n            var job = month[j];\n            var mark_today = \"\";\n\n            if (!after_today && job.start_date && job.start_date >= new Date(today.getFullYear(), today.getMonth(), today.getDate())) {\n              after_today = true;\n              mark_today = \" after-today\";\n            }\n\n            display_months.push(React.createElement(\"li\", {\n              key: job.id,\n              \"data-id\": job.id,\n              className: (job.progress === 100 ? \"complete\" : job.progress > 0 ? \"progress\" : \"\") + (\" \" + month_keys[i]) + (job.start_date && job.start_date.toDateString() === new Date().toDateString() ? \" today\" : \"\") + mark_today + (j === month.length - 1 ? \" last-of-month\" : \"\") + (job.id === this.state.selected_job ? \" selected\" : \" not-selected\") + (j < month.length - 1 && month[j + 1].id === this.state.selected_job ? \" job-before-selected\" : \"\"),\n              onClick: this.selectJob,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 95\n              },\n              __self: this\n            }, j === 0 ? React.createElement(\"h3\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110\n              },\n              __self: this\n            }, MonthNames[month_keys[i]] || month_keys[i]) : [], React.createElement(\"span\", {\n              className: \"h-line\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              className: \"selected-arrow\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 113\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              className: \"date\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114\n              },\n              __self: this\n            }, job.start_date ? job.start_date.getDate() : \"\"), React.createElement(\"div\", {\n              className: \"job-box\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115\n              },\n              __self: this\n            }, React.createElement(\"h4\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: job.icon,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              className: \"job-name\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116\n              },\n              __self: this\n            }, job.name))), React.createElement(\"span\", {\n              className: \"status\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"progress-bar\",\n              style: {\n                transform: \"scaleX(\" + job.progress / 100 + \")\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 119\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              className: \"status-text\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 120\n              },\n              __self: this\n            }, job.progress === 100 ? React.createElement(\"i\", {\n              className: \"fas fa-check\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 122\n              },\n              __self: this\n            }) : job.progress === 0 ? \"\" : job.progress + \"%\"))));\n          }\n\n          ;\n        }\n\n        ;\n      }\n\n      return React.createElement(\"article\", {\n        className: \"project\" + (this.props.last_selected ? \" last_selected\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, this.props.project_data.name), this.props.selected_job && React.createElement(\"div\", {\n        className: \"button-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleCloseButton,\n        className: \"icon-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"header-color\",\n        style: {\n          backgroundColor: this.props.project_data.color || \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"timeline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, display_months));\n    }\n  }]);\n\n  return Projects;\n}(React.Component);\n\nexport default Projects;","map":{"version":3,"sources":["/Users/matt/Work/Projul/projul-prototype/src/components/project.js"],"names":["React","MonthNames","JobsById","Projects","state","loaded","selected_job","selectJob","e","id","currentTarget","dataset","props","onSelectProject","handleCloseButton","months","Unscheduled","jobs_by_id","project_data","jobs","map","job_id","i","job_insert","start_date","push","job_month","getMonth","getJobData","setState","prevProps","refresh","display_months","today","Date","month_keys","Object","keys","after_today","sort","a","b","length","month","j","job","mark_today","getFullYear","getDate","progress","toDateString","icon","name","transform","last_selected","backgroundColor","color","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {MonthNames, JobsById} from '../utilities/content'\n\nclass Projects extends React.Component {\n  state = {\n    loaded: false,\n    selected_job: \"none\"\n  };\n\n  getJobData () {\n    var months = {\n      Unscheduled: []\n    };\n    var jobs_by_id = {};\n    this.props.project_data.jobs.map((job_id, i) => {\n      let job_insert = {\n        ...JobsById[job_id]\n      };\n      jobs_by_id[job_insert.id] = job_insert;\n      if (!job_insert.start_date) {\n        months.Unscheduled.push(job_insert);\n        return true;\n      }\n      let job_month = job_insert.start_date.getMonth();\n      if (!months[job_month]) {\n        months[job_month] = [];\n      }\n      months[job_month].push(job_insert);\n      return true;\n    });\n    return [jobs_by_id, months];\n  }\n\n  componentDidMount() {\n    var jobs_by_id = this.getJobData();\n    this.setState({\n      jobs_by_id: jobs_by_id[0],\n      months: jobs_by_id[1],\n      selected_job:this.props.selected_job\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.selected_job !== prevProps.selected_job) {\n      this.setState({\n        selected_job:this.props.selected_job\n      });\n    }\n    if (this.props.project_data.id !== prevProps.project_data.id || this.props.refresh !== prevProps.refresh) {\n      var jobs_by_id = this.getJobData();\n      this.setState({\n        jobs_by_id: jobs_by_id[0],\n        months: jobs_by_id[1],\n        selected_job:this.props.selected_job\n      });\n    }\n  }\n\n\n  selectJob = (e) => {\n    let id=e.currentTarget.dataset.id;\n\n    // if (this.state.selected_job!==id) {\n      // this.setState({\n      //   selected_job:id\n      // });\n      this.props.onSelectProject(this.props.id, id);\n    // }\n  }\n\n  handleCloseButton = (e) => {\n    this.props.onSelectProject(null, null);\n  }\n\n\n  render() {\n    var display_months = [];\n    var today = new Date();\n    if (this.state.months) {\n      var month_keys = Object.keys(this.state.months);\n      var months = this.state.months;\n      var after_today = false;\n      month_keys.sort(function(a, b){return months[a] - months[b]});\n      for (var i=0; i<month_keys.length; i++) {\n        var month = this.state.months[month_keys[i]];\n        month.sort(function(a, b){return a.start_date - b.start_date});\n        for (var j=0; j<month.length; j++) {\n          var job = month[j];\n          var mark_today = \"\";\n          if (!after_today && job.start_date && job.start_date >= new Date(today.getFullYear(), today.getMonth(), today.getDate())) {\n            after_today = true;\n            mark_today = \" after-today\";\n          }\n          display_months.push((\n            <li\n              key={job.id}\n              data-id={job.id}\n              className={\n                (job.progress === 100 ? \"complete\" : job.progress > 0 ? \"progress\" : \"\") +\n                (\" \"+month_keys[i]) +\n                (job.start_date && (job.start_date.toDateString() === (new Date()).toDateString())?\" today\":\"\") +\n                mark_today +\n                (j === month.length-1?\" last-of-month\":\"\") +\n                (job.id===this.state.selected_job?\" selected\":\" not-selected\") +\n                ((j<month.length-1) && month[j+1].id===this.state.selected_job?\" job-before-selected\":\"\")\n              }\n              onClick={this.selectJob}\n            >\n              {\n                j===0?<h3>{MonthNames[month_keys[i]] || month_keys[i]}</h3>:[]\n              }\n              <span className=\"h-line\" />\n              <span className=\"selected-arrow\" />\n              <span className=\"date\">{(job.start_date ? job.start_date.getDate() : \"\")}</span>\n              <div className=\"job-box\">\n                <h4><i className={job.icon}></i><span className=\"job-name\">{job.name}</span></h4>\n              </div>\n              <span className=\"status\">\n                <span className=\"progress-bar\" style={{transform:\"scaleX(\"+(job.progress/100)+\")\"}}></span>\n                <span className=\"status-text\">{\n                  job.progress===100 ?\n                  (<i className=\"fas fa-check\"></i>):\n                  job.progress===0 ?\n                  (\"\"):\n                  (job.progress + \"%\")\n                }</span>\n              </span>\n            </li>\n          ));\n        };\n      };\n    }\n    return (\n      <article\n        className={\"project\" +\n          (this.props.last_selected?\" last_selected\":\"\")\n      }>\n        <header>\n          <h2>{this.props.project_data.name}</h2>\n\n            { this.props.selected_job && (\n              <div className=\"button-menu\">\n                <button onClick={this.handleCloseButton} className=\"icon-button\"><i className=\"fas fa-times\"></i></button>\n              </div>\n            )}\n        </header>\n        <div className=\"header-color\" style={{\n          backgroundColor: this.props.project_data.color || \"black\"\n        }} />\n        <div className=\"timeline\">\n          {display_months}\n        </div>\n      </article>\n    );\n  }\n}\n\nexport default Projects\n"]},"metadata":{},"sourceType":"module"}