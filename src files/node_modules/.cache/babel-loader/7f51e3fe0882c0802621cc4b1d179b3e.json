{"ast":null,"code":"import _toConsumableArray from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matt/Work/Projul/projul-prototype/src/components/task-editor.js\";\nimport React from 'react';\n\nvar TaskEditor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TaskEditor, _React$Component);\n\n  function TaskEditor() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TaskEditor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TaskEditor)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tasks: [],\n      mode: \"task\"\n    };\n\n    _this.handleTaskClick = function (e) {\n      var id = e.currentTarget.dataset.id;\n\n      for (var t = 0; t < _this.props.selected_job_data.tasks.length; t++) {\n        var task = _this.props.selected_job_data.tasks[t];\n\n        if (task.id === id) {\n          _this.props.selected_job_data.tasks[t].completed = !task.completed;\n        }\n      }\n\n      _this.setState({\n        tasks: _toConsumableArray(_this.props.selected_job_data.tasks)\n      });\n    };\n\n    _this.handleDelete = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var id = e.currentTarget.dataset.id;\n      var tasks = [];\n\n      for (var t = 0; t < _this.props.selected_job_data.tasks.length; t++) {\n        var task = _this.props.selected_job_data.tasks[t];\n\n        if (task.id !== id) {\n          tasks.push(_this.props.selected_job_data.tasks[t]);\n        }\n      }\n\n      _this.props.selected_job_data.tasks = tasks;\n\n      _this.setState({\n        tasks: _toConsumableArray(_this.props.selected_job_data.tasks)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TaskEditor, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        tasks: _toConsumableArray(this.props.selected_job_data.tasks)\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.selected_job_data && this.props.selected_job !== prevProps.selected_job) {\n        this.setState({\n          tasks: _toConsumableArray(this.props.selected_job_data.tasks)\n        });\n      }\n    }\n  }, {\n    key: \"changeMode\",\n    value: function changeMode(mode) {\n      this.setState({\n        mode: mode\n      });\n    }\n  }, {\n    key: \"getMenu\",\n    value: function getMenu() {\n      var _this2 = this;\n\n      var menu = this.state.mode === \"task\" ? React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          _this2.handleAddTask(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Add Task\")))) : React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          _this2.handleDelete();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Delete Tasks\")), React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          _this2.changeMode(\"task\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Cancel\"))));\n      return menu;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tasks = _toConsumableArray(this.state.tasks);\n\n      var task_nodes = [];\n\n      for (var t = 0; t < tasks.length; t++) {\n        task_nodes.push(React.createElement(\"li\", {\n          key: this.props.selected_job + \"_\" + tasks[t].id,\n          className: \"task\" + (tasks[t].completed ? \" completed\" : \"\"),\n          \"data-id\": tasks[t].id,\n          onClick: this.handleTaskClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"icon-holder\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-check-circle check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }), React.createElement(\"i\", {\n          className: \"far fa-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"task-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, tasks[t].name)), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"icon-button\",\n          onClick: this.handleEdit,\n          title: \"Edit Task\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"icon-button\",\n          onClick: this.handleDelete,\n          title: \"Delete Task\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-trash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        })))));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"task-editor\" + (this.state.loaded ? \"\" : \" loading\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.getMenu(), React.createElement(\"div\", {\n        className: \"task-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, task_nodes)));\n    }\n  }]);\n\n  return TaskEditor;\n}(React.Component);\n\nexport default TaskEditor;","map":{"version":3,"sources":["/Users/matt/Work/Projul/projul-prototype/src/components/task-editor.js"],"names":["React","TaskEditor","state","tasks","mode","handleTaskClick","e","id","currentTarget","dataset","t","props","selected_job_data","length","task","completed","setState","handleDelete","preventDefault","stopPropagation","push","prevProps","selected_job","menu","handleAddTask","changeMode","task_nodes","name","handleEdit","loaded","getMenu","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n\nclass TaskEditor extends React.Component {\n  state = {\n    tasks:[],\n    mode: \"task\"\n  };\n\n  componentDidMount() {\n    this.setState({\n      tasks: [...this.props.selected_job_data.tasks]\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.selected_job_data && this.props.selected_job !== prevProps.selected_job) {\n      this.setState({\n        tasks: [...this.props.selected_job_data.tasks]\n      });\n    }\n  }\n\n  handleTaskClick = (e) => {\n    let id=e.currentTarget.dataset.id;\n    for (var t=0; t<this.props.selected_job_data.tasks.length; t++) {\n      var task = this.props.selected_job_data.tasks[t];\n      if (task.id === id) {\n        this.props.selected_job_data.tasks[t].completed = !task.completed;\n      }\n    }\n    this.setState({\n      tasks: [...this.props.selected_job_data.tasks]\n    });\n  }\n\n  handleDelete = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    let id=e.currentTarget.dataset.id;\n    let tasks = [];\n    for (var t=0; t<this.props.selected_job_data.tasks.length; t++) {\n      var task = this.props.selected_job_data.tasks[t];\n      if (task.id !== id) {\n        tasks.push(this.props.selected_job_data.tasks[t]);\n      }\n    }\n    this.props.selected_job_data.tasks = tasks;\n    this.setState({\n      tasks: [...this.props.selected_job_data.tasks]\n    });\n  }\n\n  changeMode (mode) {\n    this.setState({\n      mode: mode\n    });\n  }\n\n  getMenu () {\n    const menu = this.state.mode === \"task\" ? (\n      <div className=\"menu\">\n        <div>\n          <button onClick={(e)=>{this.handleAddTask(e)}}><i className=\"fas fa-plus\"></i><span>Add Task</span></button>\n        </div>\n      </div>\n    ):(\n      <div className=\"menu\">\n        <div>\n          <button onClick={(e)=>{this.handleDelete()}}><i className=\"fas fa-trash\"></i><span>Delete Tasks</span></button>\n          <button onClick={(e)=>{this.changeMode(\"task\")}}><span>Cancel</span></button>\n        </div>\n      </div>\n    );\n    return menu;\n  }\n\n\n  render() {\n    let tasks = [...this.state.tasks];\n    let task_nodes = [];\n\n    for (var t=0; t<tasks.length; t++) {\n      task_nodes.push((\n        <li key={this.props.selected_job + \"_\" + tasks[t].id} className={\"task\" + (tasks[t].completed ? \" completed\" : \"\")} data-id={tasks[t].id} onClick={this.handleTaskClick}>\n          <h3>\n            <span className=\"icon-holder\"><i className=\"fas fa-check-circle check\"></i><i className=\"far fa-circle\"></i></span>\n            <span className=\"task-name\">{tasks[t].name}</span>\n          </h3>\n          <div>\n            <button className=\"icon-button\" onClick={this.handleEdit} title=\"Edit Task\"><i className=\"fas fa-edit\"></i></button>\n            <button className=\"icon-button\" onClick={this.handleDelete} title=\"Delete Task\"><i className=\"fas fa-trash\"></i></button>\n          </div>\n        </li>\n      ));\n    }\n\n    return (\n      <div className={\"task-editor\" + (this.state.loaded?\"\":\" loading\")} >\n        {this.getMenu()}\n        <div className=\"task-list\">\n          <ul>{task_nodes}</ul>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default TaskEditor\n"]},"metadata":{},"sourceType":"module"}