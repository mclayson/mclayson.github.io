{"ast":null,"code":"import _classCallCheck from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matt/Work/Projul/projul-prototype/src/components/user-heatmap.js\";\nimport React from 'react';\nimport { WEEKEND, DAILY_WORK_HOURS } from '../config/account-settings';\nimport { DaysInMonth, SameDay } from '../utilities/date';\nimport { TasksById } from '../utilities/content';\n\nvar Scheduler =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Scheduler, _React$Component);\n\n  function Scheduler() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Scheduler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Scheduler)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selected_day: 0,\n      tasks_by_day: [],\n      tasks_by_id: {}\n    };\n\n    _this.handleDayClick = function (e) {\n      var id = parseInt(e.currentTarget.dataset.id, 10);\n      var index = parseInt(e.currentTarget.dataset.index, 10);\n\n      _this.props.handleDayClick(id, index);\n    };\n\n    _this.handleTaskClick = function (e) {\n      var id = e.currentTarget.dataset.id;\n      var project_id = e.currentTarget.dataset.project;\n\n      _this.props.handleTaskClick(project_id, _this.state.tasks_by_id[id]);\n    };\n\n    return _this;\n  }\n\n  _createClass(Scheduler, [{\n    key: \"calcTasksByDay\",\n    // generateTasks = () => {\n    //   let tasks_by_day = [];\n    //   let tasks_by_id = {};\n    //\n    //   const today = new Date();\n    //   const next_week = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 7);\n    //   const past_number_chart = [3,8,8,0,7,1,7,7,5,6,6,5,5,6,7,8,8,8,8];\n    //   const number_chart = [0,0,0,0,0,1,1,2,2,3,4,5,5,6,7,8,8,8,8];\n    //   const future_number_chart = [0,0,0,0,0,1,1,2,0,3,0,5,0,0,0,0,0,0,8];\n    //\n    //   for (var d=0; d<DaysInMonth(this.props.month, this.props.year); d++) {\n    //     let day_tasks = [];\n    //     const current_date = new Date(this.props.year, this.props.month, (d+1));\n    //     if (this.props.task.start_date && SameDay(this.props.task.start_date, current_date) && this.props.task.assigned_user === this.props.user.user_id) {\n    //       // day_tasks.push(this.generateTask({...this.props.task}));\n    //     }\n    //     // RANDOMLY ASSIGN A NUMBER OF HOURS BASED ON IF THE CURRENT_DATE IS BEFORE TODAY, WITHIN A WEEK OR BEYOND A WEEK\n    //     const number_of_hours = (current_date < today) ? Math.min(past_number_chart[Math.floor(Math.random()*past_number_chart.length)],DAILY_WORK_HOURS) :\n    //                             (current_date > next_week) ? Math.min(future_number_chart[Math.floor(Math.random()*future_number_chart.length)],DAILY_WORK_HOURS) :\n    //                             Math.min(number_chart[Math.floor(Math.random()*number_chart.length)],DAILY_WORK_HOURS);\n    //     const number_of_tasks = Math.ceil(Math.random()*number_of_hours)\n    //     //\n    //     if (number_of_hours>0) {\n    //       var last_end_time = 6;\n    //       for (var t=0; t<number_of_tasks; t++) {\n    //         var start_time = last_end_time+(Math.round(number_of_hours/number_of_tasks)+(Math.random()));\n    //         var end_time = start_time+(number_of_hours/number_of_tasks);\n    //         var id = \"task-\"+d+\"-\"+t;\n    //         var task = {\n    //           start_date: new Date(this.props.year, this.props.month, (d+1), start_time ),\n    //           end_date: new Date(this.props.year, this.props.month, (d+1), end_time, -Math.round(Math.random()*10) ),\n    //           assigned_user: this.props.user.user_id,\n    //           project_data: ProjectList[Math.floor(Math.random()*ProjectList.length)],\n    //           name: \"Task\",\n    //           icon: \"fas fa-hammer\",\n    //           progress: 0,\n    //           id: id\n    //         };\n    //         day_tasks.push(task);\n    //         last_end_time = end_time;\n    //         tasks_by_id[id] = task;\n    //       }\n    //     }\n    //     tasks_by_day.push(day_tasks);\n    //   }\n    //   this.setState({\n    //     tasks_by_id: tasks_by_id\n    //   })\n    //   return tasks_by_day;\n    // }\n    //\n    value: function calcTasksByDay() {\n      var tasks_by_day = [];\n\n      for (var d = 0; d < DaysInMonth(this.props.month, this.props.year); d++) {\n        tasks_by_day.push([]);\n      }\n\n      for (var t = 0; t < this.props.user.tasks.length; t++) {\n        var task_id = this.props.user.tasks[t];\n        var task = TasksById[task_id];\n\n        if (task.start_date && task.start_date.getMonth() === this.props.month) {\n          tasks_by_day[task.start_date.getDate()].push(task);\n        }\n      }\n\n      return tasks_by_day;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var tasks_by_day = this.calcTasksByDay(); // setTimeout(()=>{\n\n      this.setState({\n        tasks_by_day: tasks_by_day\n      }); // }, 100);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.month !== prevProps.month) {\n        this.setState({\n          tasks_by_day: this.calcTasksByDay()\n        });\n      }\n\n      if (this.props.selected_day && this.props.selected_day !== prevProps.selected_day) {\n        this.setState({\n          selected_day: this.props.selected_day\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var cells = [];\n      var day_cells = [];\n      var classes = [\"tasks-0\", \"tasks-1\", \"tasks-2\", \"tasks-3\", \"tasks-4\", \"tasks-5\", \"tasks-6\", \"tasks-7\", \"tasks-8\"];\n\n      if (this.state.tasks_by_day && this.state.tasks_by_day.length === DaysInMonth(this.props.month, this.props.year)) {\n        for (var i = 0; i < DaysInMonth(this.props.month, this.props.year); i++) {\n          var current_date = new Date(this.props.year, this.props.month, i + 1);\n          var value = 0;\n\n          for (var t = 0; t < this.state.tasks_by_day[i].length; t++) {\n            var task = this.state.tasks_by_day[i][t];\n            var task_duration = (task.end_date - task.start_date) / 1000 / 60 / 60;\n            value += task_duration;\n          }\n\n          var weekend = \"\";\n\n          for (var w = 0; w < WEEKEND.length; w++) {\n            if (current_date.getDay() === WEEKEND[w]) {\n              value = 0;\n              weekend = \" weekend\";\n            }\n          }\n\n          cells.push(React.createElement(\"li\", {\n            key: this.props.user.user_id + \"_\" + i,\n            \"data-id\": i + 1,\n            \"data-index\": this.props.index,\n            className: \"cell \" + classes[Math.min(Math.round(value * 8 / DAILY_WORK_HOURS), classes.length - 1)] + weekend + (current_date.toDateString() === new Date().toDateString() || this.props.month / 20 + this.props.year > new Date().getMonth() / 20 + new Date().getFullYear() && i === 0 ? \" today\" : \"\") + (this.props.task.start_date && SameDay(this.props.task.start_date, current_date) && this.props.task.assigned_user === this.props.user.user_id ? \" assigned\" : \"\"),\n            onClick: this.handleDayClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, value ? Math.round(value * 10) / 10 + \" hrs\" : \"\"));\n        } // The Day view\n\n\n        if (this.state.selected_day && this.state.tasks_by_day[this.state.selected_day - 1]) {\n          for (var h = 0; h < 24; h++) {\n            // const current_time = new Date(this.props.year, this.props.month, this.state.selected_day, h);\n            day_cells.push(React.createElement(\"li\", {\n              key: \"hour-\" + h,\n              className: \"day-cell\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 169\n              },\n              __self: this\n            }));\n          } //Represent Tasks on Day View\n\n\n          for (t = 0; t < this.state.tasks_by_day[this.state.selected_day - 1].length; t++) {\n            var _task = this.state.tasks_by_day[this.state.selected_day - 1][t];\n\n            var _task_duration = (_task.end_date - _task.start_date) / 1000 / 60 / 60 / 24 * 100;\n\n            var task_start = (_task.start_date - new Date(this.props.year, this.props.month, this.state.selected_day)) / 1000 / 60 / 60 / 24 * 100;\n            day_cells.push(React.createElement(\"li\", {\n              key: \"task-\" + t,\n              \"data-id\": _task.id,\n              \"data-project\": _task.project_data.id,\n              className: \"task\",\n              style: {\n                left: task_start + \"%\",\n                maxWidth: _task_duration + \"%\",\n                backgroundColor: _task.project_data.color\n              },\n              onClick: this.handleTaskClick,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 185\n              },\n              __self: this\n            }, React.createElement(\"h4\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 201\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: _task.icon,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 202\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 203\n              },\n              __self: this\n            }, React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 203\n              },\n              __self: this\n            }, _task.name))), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 205\n              },\n              __self: this\n            }, _task.project_data.name)));\n          }\n        }\n      }\n\n      return React.createElement(\"ul\", {\n        className: this.props.selected_day ? \"show-day\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"day-schedule\",\n        style: {\n          // transformOrigin: ((this.state.selected_day/DaysInMonth(this.props.month, this.props.year))*100) + \"% 0\"\n          transition: \"opacity .5s ease, transform 0s ease 1s\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, day_cells)), cells);\n    }\n  }]);\n\n  return Scheduler;\n}(React.Component);\n\nexport default Scheduler;","map":{"version":3,"sources":["/Users/matt/Work/Projul/projul-prototype/src/components/user-heatmap.js"],"names":["React","WEEKEND","DAILY_WORK_HOURS","DaysInMonth","SameDay","TasksById","Scheduler","state","selected_day","tasks_by_day","tasks_by_id","handleDayClick","e","id","parseInt","currentTarget","dataset","index","props","handleTaskClick","project_id","project","d","month","year","push","t","user","tasks","length","task_id","task","start_date","getMonth","getDate","calcTasksByDay","setState","prevProps","cells","day_cells","classes","i","current_date","Date","value","task_duration","end_date","weekend","w","getDay","user_id","Math","min","round","toDateString","getFullYear","assigned_user","h","task_start","project_data","left","maxWidth","backgroundColor","color","icon","name","transition","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {WEEKEND, DAILY_WORK_HOURS} from '../config/account-settings'\nimport {DaysInMonth, SameDay} from '../utilities/date'\nimport {TasksById} from '../utilities/content'\n\nclass Scheduler extends React.Component {\n  state = {\n    selected_day:0,\n    tasks_by_day:[],\n    tasks_by_id:{}\n  };\n\n\n  // generateTasks = () => {\n  //   let tasks_by_day = [];\n  //   let tasks_by_id = {};\n  //\n  //   const today = new Date();\n  //   const next_week = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 7);\n  //   const past_number_chart = [3,8,8,0,7,1,7,7,5,6,6,5,5,6,7,8,8,8,8];\n  //   const number_chart = [0,0,0,0,0,1,1,2,2,3,4,5,5,6,7,8,8,8,8];\n  //   const future_number_chart = [0,0,0,0,0,1,1,2,0,3,0,5,0,0,0,0,0,0,8];\n  //\n  //   for (var d=0; d<DaysInMonth(this.props.month, this.props.year); d++) {\n  //     let day_tasks = [];\n  //     const current_date = new Date(this.props.year, this.props.month, (d+1));\n  //     if (this.props.task.start_date && SameDay(this.props.task.start_date, current_date) && this.props.task.assigned_user === this.props.user.user_id) {\n  //       // day_tasks.push(this.generateTask({...this.props.task}));\n  //     }\n  //     // RANDOMLY ASSIGN A NUMBER OF HOURS BASED ON IF THE CURRENT_DATE IS BEFORE TODAY, WITHIN A WEEK OR BEYOND A WEEK\n  //     const number_of_hours = (current_date < today) ? Math.min(past_number_chart[Math.floor(Math.random()*past_number_chart.length)],DAILY_WORK_HOURS) :\n  //                             (current_date > next_week) ? Math.min(future_number_chart[Math.floor(Math.random()*future_number_chart.length)],DAILY_WORK_HOURS) :\n  //                             Math.min(number_chart[Math.floor(Math.random()*number_chart.length)],DAILY_WORK_HOURS);\n  //     const number_of_tasks = Math.ceil(Math.random()*number_of_hours)\n  //     //\n  //     if (number_of_hours>0) {\n  //       var last_end_time = 6;\n  //       for (var t=0; t<number_of_tasks; t++) {\n  //         var start_time = last_end_time+(Math.round(number_of_hours/number_of_tasks)+(Math.random()));\n  //         var end_time = start_time+(number_of_hours/number_of_tasks);\n  //         var id = \"task-\"+d+\"-\"+t;\n  //         var task = {\n  //           start_date: new Date(this.props.year, this.props.month, (d+1), start_time ),\n  //           end_date: new Date(this.props.year, this.props.month, (d+1), end_time, -Math.round(Math.random()*10) ),\n  //           assigned_user: this.props.user.user_id,\n  //           project_data: ProjectList[Math.floor(Math.random()*ProjectList.length)],\n  //           name: \"Task\",\n  //           icon: \"fas fa-hammer\",\n  //           progress: 0,\n  //           id: id\n  //         };\n  //         day_tasks.push(task);\n  //         last_end_time = end_time;\n  //         tasks_by_id[id] = task;\n  //       }\n  //     }\n  //     tasks_by_day.push(day_tasks);\n  //   }\n  //   this.setState({\n  //     tasks_by_id: tasks_by_id\n  //   })\n  //   return tasks_by_day;\n  // }\n  //\n  calcTasksByDay () {\n    var tasks_by_day = [];\n    for (var d=0; d<DaysInMonth(this.props.month, this.props.year); d++) {\n      tasks_by_day.push([]);\n    }\n\n    for (var t=0; t<this.props.user.tasks.length; t++) {\n      const task_id = this.props.user.tasks[t];\n      let task = TasksById[task_id];\n      if (task.start_date && task.start_date.getMonth() === this.props.month) {\n        tasks_by_day[task.start_date.getDate()].push(task);\n      }\n    }\n    return tasks_by_day;\n  }\n  componentDidMount() {\n    var tasks_by_day = this.calcTasksByDay();\n    // setTimeout(()=>{\n      this.setState({\n        tasks_by_day: tasks_by_day\n      });\n    // }, 100);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.month !== prevProps.month) {\n      this.setState({\n        tasks_by_day: this.calcTasksByDay()\n      });\n    }\n    if (this.props.selected_day && this.props.selected_day !== prevProps.selected_day) {\n      this.setState({\n        selected_day: this.props.selected_day\n      });\n    }\n  }\n\n  handleDayClick = (e) => {\n    const id=parseInt(e.currentTarget.dataset.id,10);\n    const index=parseInt(e.currentTarget.dataset.index,10);\n    this.props.handleDayClick(id, index);\n  }\n  handleTaskClick = (e) => {\n    const id=e.currentTarget.dataset.id;\n    const project_id=e.currentTarget.dataset.project;\n    this.props.handleTaskClick(project_id, this.state.tasks_by_id[id]);\n  }\n\n  render() {\n    const cells = [];\n    const day_cells = [];\n    const classes = [\n      \"tasks-0\",\n      \"tasks-1\",\n      \"tasks-2\",\n      \"tasks-3\",\n      \"tasks-4\",\n      \"tasks-5\",\n      \"tasks-6\",\n      \"tasks-7\",\n      \"tasks-8\"\n    ];\n\n    if (this.state.tasks_by_day && this.state.tasks_by_day.length === DaysInMonth(this.props.month, this.props.year)) {\n      for (var i=0; i<DaysInMonth(this.props.month, this.props.year); i++) {\n\n        const current_date = new Date(this.props.year, this.props.month, (i+1));\n        let value = 0;\n        for (var t=0; t<this.state.tasks_by_day[i].length; t++) {\n          const task = this.state.tasks_by_day[i][t];\n          const task_duration = (((task.end_date-task.start_date)/1000)/60/60);\n          value+=task_duration;\n        }\n        let weekend = \"\";\n\n        for (var w=0; w<WEEKEND.length; w++) {\n          if (current_date.getDay() === WEEKEND[w]) {\n            value = 0;\n            weekend = \" weekend\";\n          }\n        }\n        cells.push((\n          <li\n            key={this.props.user.user_id + \"_\" + i}\n            data-id={(i+1)}\n            data-index={(this.props.index)}\n            className={\"cell \" +\n              (classes[Math.min(Math.round(value*8/DAILY_WORK_HOURS),classes.length-1)]) +\n              weekend +\n              (((current_date.toDateString() === (new Date()).toDateString()) || (((this.props.month/20)+this.props.year) > (((new Date()).getMonth()/20)+(new Date()).getFullYear()) && i===0)) ? \" today\" : \"\") +\n              (this.props.task.start_date && SameDay(this.props.task.start_date, current_date) && this.props.task.assigned_user === this.props.user.user_id ? \" assigned\" : \"\")\n          } onClick={this.handleDayClick}\n          >{\n            value?(Math.round(value*10)/10)+\" hrs\":\"\"\n          }</li>\n        ));\n      }\n\n      // The Day view\n      if (this.state.selected_day && this.state.tasks_by_day[this.state.selected_day-1]) {\n\n        for (var h=0; h<24; h++) {\n          // const current_time = new Date(this.props.year, this.props.month, this.state.selected_day, h);\n          day_cells.push((\n            <li\n              key={\"hour-\"+h}\n              className={\n                \"day-cell\"\n              }\n            >\n            </li>\n          ));\n        }\n\n        //Represent Tasks on Day View\n        for (t=0; t<this.state.tasks_by_day[this.state.selected_day-1].length; t++) {\n          const task = this.state.tasks_by_day[this.state.selected_day-1][t];\n          const task_duration = (((task.end_date-task.start_date)/1000)/60/60/24)*100;\n          const task_start = ((task.start_date - new Date(this.props.year, this.props.month, this.state.selected_day))/1000/60/60/24)*100;\n          day_cells.push((\n            <li\n              key={\"task-\"+t}\n              data-id={task.id}\n              data-project={task.project_data.id}\n              className={\n                \"task\"\n              }\n              style={{\n                left: task_start+\"%\",\n                maxWidth: task_duration+\"%\",\n                backgroundColor: task.project_data.color\n              }}\n              onClick={\n                this.handleTaskClick\n              }\n            >\n              <h4>\n                <i className={task.icon}></i>\n                <span><strong>{task.name}</strong></span>\n              </h4>\n              <div>{task.project_data.name}</div>\n            </li>\n          ));\n        }\n      }\n    }\n\n    return (\n      <ul className={(this.props.selected_day ? \"show-day\" : \"\")}>\n        <li className={\"day-schedule\"}\n          style={{\n            // transformOrigin: ((this.state.selected_day/DaysInMonth(this.props.month, this.props.year))*100) + \"% 0\"\n            transition: \"opacity .5s ease, transform 0s ease 1s\"\n          }}\n        >\n          <ul>\n            {day_cells}\n          </ul>\n        </li>\n        {cells}\n      </ul>\n    );\n  }\n}\n\nexport default Scheduler\n"]},"metadata":{},"sourceType":"module"}