{"ast":null,"code":"import _objectSpread from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matt/Work/Projul/projul-prototype/src/components/project.js\";\nimport React from 'react';\nimport { MonthNames, TasksById } from '../utilities/content';\n\nvar Projects =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Projects, _React$Component);\n\n  function Projects() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Projects);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Projects)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loaded: false,\n      selected_task: \"none\"\n    };\n\n    _this.selectTask = function (e) {\n      var id = e.currentTarget.dataset.id;\n\n      _this.setState({\n        show_selected_task: _this.state.selected_task === id ? !_this.state.show_selected_task : true\n      });\n\n      if (_this.state.selected_task !== id) {\n        _this.setState({\n          selected_task: id\n        });\n\n        _this.props.onSelectProject(_this.props.id, _this.state.tasks_by_id[id]);\n      } else {\n        _this.props.onSelectProject(null, null);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Projects, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var months = {\n        Unassigned: []\n      };\n      var tasks_by_id = {};\n      this.props.project_data.tasks.map(function (task_id, i) {\n        var task_insert = _objectSpread({}, TasksById[task_id]);\n\n        tasks_by_id[task_insert.id] = task_insert;\n\n        if (!task_insert.start_date) {\n          months.Unassigned.push(task_insert);\n          return true;\n        }\n\n        var task_month = task_insert.start_date.getMonth();\n\n        if (!months[task_month]) {\n          months[task_month] = [];\n        }\n\n        months[task_month].push(task_insert);\n        return true;\n      });\n      this.setState({\n        tasks_by_id: tasks_by_id,\n        months: months,\n        selected_task: this.props.selected_task,\n        show_selected_task: this.props.selected_task ? true : false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var display_months = [];\n\n      if (this.state.months) {\n        var month_keys = Object.keys(this.state.months);\n        var months = this.state.months;\n        month_keys.sort(function (a, b) {\n          return months[a] - months[b];\n        });\n\n        for (var i = 0; i < month_keys.length; i++) {\n          var month = this.state.months[month_keys[i]];\n          month.sort(function (a, b) {\n            return a.start_date - b.start_date;\n          });\n\n          for (var j = 0; j < month.length; j++) {\n            var task = month[j];\n            display_months.push(React.createElement(\"li\", {\n              key: task.id,\n              \"data-id\": task.id,\n              className: (task.progress === 100 ? \"complete\" : task.progress > 0 ? \"progress\" : \"\") + (\" \" + month_keys[i]) + (task.start_date && task.start_date.toDateString() === new Date().toDateString() ? \" today\" : \"\") + (j === month.length - 1 ? \" last-of-month\" : \"\") + (task.id === this.state.selected_task && this.state.show_selected_task ? \" selected\" : this.state.show_selected_task === false ? \" none-selected\" : \" not-selected\") + (j < month.length - 1 && month[j + 1].id === this.state.selected_task && this.state.show_selected_task ? \" task-before-selected\" : \"\"),\n              onClick: this.selectTask,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70\n              },\n              __self: this\n            }, j === 0 ? React.createElement(\"h3\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            }, MonthNames[month_keys[i]] || month_keys[i]) : [], React.createElement(\"span\", {\n              className: \"h-line\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              className: \"selected-arrow\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              className: \"date\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88\n              },\n              __self: this\n            }, task.start_date ? task.start_date.getDate() : \"\"), React.createElement(\"div\", {\n              className: \"task-box\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89\n              },\n              __self: this\n            }, React.createElement(\"h4\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: task.icon,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              className: \"task-name\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90\n              },\n              __self: this\n            }, task.name))), React.createElement(\"span\", {\n              className: \"status\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"progress-bar\",\n              style: {\n                transform: \"scaleX(\" + task.progress / 100 + \")\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              className: \"status-text\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94\n              },\n              __self: this\n            }, task.progress === 100 ? React.createElement(\"i\", {\n              className: \"fas fa-check\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 96\n              },\n              __self: this\n            }) : task.progress === 0 ? \"\" : task.progress + \"%\"))));\n          }\n\n          ;\n        }\n\n        ;\n      }\n\n      return React.createElement(\"article\", {\n        className: \"project\" + (this.props.last_selected ? \" last_selected\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.props.project_data.name)), React.createElement(\"div\", {\n        className: \"header-color\",\n        style: {\n          backgroundColor: this.props.project_data.color || \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"timeline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, display_months));\n    }\n  }]);\n\n  return Projects;\n}(React.Component);\n\nexport default Projects;","map":{"version":3,"sources":["/Users/matt/Work/Projul/projul-prototype/src/components/project.js"],"names":["React","MonthNames","TasksById","Projects","state","loaded","selected_task","selectTask","e","id","currentTarget","dataset","setState","show_selected_task","props","onSelectProject","tasks_by_id","months","Unassigned","project_data","tasks","map","task_id","i","task_insert","start_date","push","task_month","getMonth","display_months","month_keys","Object","keys","sort","a","b","length","month","j","task","progress","toDateString","Date","getDate","icon","name","transform","last_selected","backgroundColor","color","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {MonthNames, TasksById} from '../utilities/content'\n\nclass Projects extends React.Component {\n  state = {\n    loaded: false,\n    selected_task: \"none\"\n  };\n\n  componentDidMount() {\n    var months = {\n      Unassigned: []\n    };\n    var tasks_by_id = {};\n    this.props.project_data.tasks.map((task_id, i) => {\n      let task_insert = {\n        ...(TasksById[task_id])\n      };\n      tasks_by_id[task_insert.id] = task_insert;\n      if (!task_insert.start_date) {\n        months.Unassigned.push(task_insert);\n        return true;\n      }\n      let task_month = task_insert.start_date.getMonth();\n      if (!months[task_month]) {\n        months[task_month] = [];\n      }\n      months[task_month].push(task_insert);\n      return true;\n    });\n    this.setState({\n      tasks_by_id: tasks_by_id,\n      months: months,\n      selected_task:this.props.selected_task,\n      show_selected_task:(this.props.selected_task?true:false)\n    });\n  }\n\n\n  selectTask = (e) => {\n    let id=e.currentTarget.dataset.id;\n\n    this.setState({\n      show_selected_task:(this.state.selected_task===id?!this.state.show_selected_task:true)\n    });\n    if (this.state.selected_task!==id) {\n      this.setState({\n        selected_task:id\n      });\n      this.props.onSelectProject(this.props.id, this.state.tasks_by_id[id]);\n    } else {\n      this.props.onSelectProject(null, null);\n    }\n  }\n\n\n  render() {\n    var display_months = [];\n\n    if (this.state.months) {\n      var month_keys = Object.keys(this.state.months);\n      var months = this.state.months;\n      month_keys.sort(function(a, b){return months[a] - months[b]});\n      for (var i=0; i<month_keys.length; i++) {\n        var month = this.state.months[month_keys[i]];\n        month.sort(function(a, b){return a.start_date - b.start_date});\n        for (var j=0; j<month.length; j++) {\n          var task = month[j];\n          display_months.push((\n            <li\n              key={task.id}\n              data-id={task.id}\n              className={\n                (task.progress === 100 ? \"complete\" : task.progress > 0 ? \"progress\" : \"\") +\n                (\" \"+month_keys[i]) +\n                (task.start_date && (task.start_date.toDateString() === (new Date()).toDateString())?\" today\":\"\") +\n                (j === month.length-1?\" last-of-month\":\"\") +\n                (task.id===this.state.selected_task&&this.state.show_selected_task?\" selected\":(this.state.show_selected_task===false?\" none-selected\":\" not-selected\")) +\n                ((j<month.length-1) && month[j+1].id===this.state.selected_task && this.state.show_selected_task?\" task-before-selected\":\"\")\n              }\n              onClick={this.selectTask}\n            >\n              {\n                j===0?<h3>{MonthNames[month_keys[i]] || month_keys[i]}</h3>:[]\n              }\n              <span className=\"h-line\" />\n              <span className=\"selected-arrow\" />\n              <span className=\"date\">{(task.start_date ? task.start_date.getDate() : \"\")}</span>\n              <div className=\"task-box\">\n                <h4><i className={task.icon}></i><span className=\"task-name\">{task.name}</span></h4>\n              </div>\n              <span className=\"status\">\n                <span className=\"progress-bar\" style={{transform:\"scaleX(\"+(task.progress/100)+\")\"}}></span>\n                <span className=\"status-text\">{\n                  task.progress===100 ?\n                  (<i className=\"fas fa-check\"></i>):\n                  task.progress===0 ?\n                  (\"\"):\n                  (task.progress + \"%\")\n                }</span>\n              </span>\n            </li>\n          ));\n        };\n      };\n    }\n    return (\n      <article\n        className={\"project\" +\n          (this.props.last_selected?\" last_selected\":\"\")\n      }>\n        <header>\n          <h2>{this.props.project_data.name}</h2>\n        </header>\n        <div className=\"header-color\" style={{\n          backgroundColor: this.props.project_data.color || \"black\"\n        }} />\n        <div className=\"timeline\">\n          {display_months}\n        </div>\n      </article>\n    );\n  }\n}\n\nexport default Projects\n"]},"metadata":{},"sourceType":"module"}