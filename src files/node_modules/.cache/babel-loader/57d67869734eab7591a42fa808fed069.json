{"ast":null,"code":"import _toConsumableArray from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matt/Work/Projul/projul-prototype/src/components/task-editor.js\";\nimport React from 'react';\n\nvar TaskEditor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TaskEditor, _React$Component);\n\n  function TaskEditor() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TaskEditor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TaskEditor)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tasks: [],\n      add_task_text: \"\",\n      temp_edit_text: \"\",\n      currently_editing: 0,\n      all_complete: false\n    };\n\n    _this.handleTaskClick = function (e) {\n      var id = e.currentTarget.dataset.id;\n\n      if (_this.state.currently_editing !== id) {\n        var tasks = _toConsumableArray(_this.state.tasks);\n\n        for (var t = 0; t < tasks.length; t++) {\n          var task = tasks[t];\n\n          if (task.id === id) {\n            task.completed = !task.completed;\n          }\n        }\n\n        _this.updateTasks(tasks);\n      }\n    };\n\n    _this.handleCompleteAll = function () {\n      var tasks = _toConsumableArray(_this.state.tasks);\n\n      for (var t = 0; t < tasks.length; t++) {\n        var task = tasks[t];\n        task.completed = true;\n      }\n\n      _this.updateTasks(tasks);\n    };\n\n    _this.handleIncompleteAll = function () {\n      var tasks = _toConsumableArray(_this.state.tasks);\n\n      for (var t = 0; t < tasks.length; t++) {\n        var task = tasks[t];\n        task.completed = false;\n      }\n\n      _this.updateTasks(tasks);\n    };\n\n    _this.handleDeleteAll = function () {\n      var tasks = [];\n\n      _this.updateTasks(tasks);\n    };\n\n    _this.handleDelete = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var id = e.currentTarget.parentNode.parentNode.dataset.id;\n      var tasks = [];\n\n      for (var t = 0; t < _this.state.tasks.length; t++) {\n        var task = _this.state.tasks[t];\n\n        if (task.id !== id) {\n          tasks.push(_this.state.tasks[t]);\n        }\n      }\n\n      _this.updateTasks(tasks);\n    };\n\n    _this.handleAddKeyPress = function (e) {\n      if (e.key === 'Enter') {\n        _this.handleAddTask();\n      }\n    };\n\n    _this.handleAddChange = function (e) {\n      _this.setState({\n        add_task_text: e.currentTarget.value\n      });\n    };\n\n    _this.handleAddTask = function (e) {\n      if (_this.state.add_task_text) {\n        var tasks = _toConsumableArray(_this.state.tasks);\n\n        tasks.push({\n          id: Math.random() + \"\",\n          name: _this.state.add_task_text,\n          completed: false\n        });\n\n        _this.updateTasks(tasks);\n\n        _this.setState({\n          add_task_text: \"\"\n        });\n      }\n    };\n\n    _this.handleEdit = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var id = e.currentTarget.parentNode.parentNode.dataset.id;\n      var name = \"\";\n\n      for (var t = 0; t < _this.state.tasks.length; t++) {\n        var task = _this.state.tasks[t];\n\n        if (task.id === id) {\n          name = _this.state.tasks[t].name;\n        }\n      }\n\n      _this.setState({\n        currently_editing: id,\n        temp_edit_text: name\n      });\n    };\n\n    _this.handleEditKeyPress = function (e) {\n      if (e.key === 'Enter') {\n        _this.handleConfirmEdit(e);\n      }\n    };\n\n    _this.handleEditChange = function (e) {\n      _this.setState({\n        temp_edit_text: e.currentTarget.value\n      });\n    };\n\n    _this.handleCancelEdit = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _this.setState({\n        currently_editing: null\n      });\n    };\n\n    _this.handleConfirmEdit = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var id = _this.state.currently_editing;\n\n      var tasks = _toConsumableArray(_this.state.tasks);\n\n      for (var t = 0; t < tasks.length; t++) {\n        var task = tasks[t];\n\n        if (task.id === id) {\n          tasks[t].name = _this.state.temp_edit_text;\n        }\n      }\n\n      _this.updateTasks(tasks);\n\n      _this.setState({\n        currently_editing: null\n      });\n    };\n\n    _this.handleTaskDragStart = function (e) {\n      // e.dataTransfer.setData(\"text\", e.target.dataset.id);\n      _this.setState({\n        dragged_id: e.target.dataset.id,\n        dragged_index: e.target.dataset.index\n      });\n    };\n\n    _this.handleTaskDragOver = function (e) {\n      e.preventDefault();\n      var drop_location;\n\n      if (e.currentTarget.dataset.index > _this.state.dragged_index) {\n        // drop_location = \"bottom\";\n        // e.currentTarget.style.background = \"blue\";\n        window.setStyle(\"\\n        [data-id=\" + e.currentTarget.dataset.id + \"] {\\n          background-color: blue;\\n        }\\n      \");\n      } else {\n        window.setStyle(\"\\n        [data-id=\" + e.currentTarget.dataset.id + \"] {\\n          background-color: red;\\n        }\\n      \"); // drop_location = \"top\";\n        // e.currentTarget.style.background = \"red\";\n      } // this.setState({\n      //   drop_id: e.currentTarget.dataset.id,\n      //   drop_index: e.currentTarget.dataset.index,\n      //   drop_location: drop_location\n      // });\n\n\n      _this.drop_id = e.currentTarget.dataset.id;\n      _this.drop_index = e.currentTarget.dataset.index;\n    };\n\n    _this.handleTaskDragLeave = function (e) {\n      e.preventDefault(); // e.currentTarget.style.background = \"\";\n      // e.currentTarget.style.borderTop = \"\";\n\n      window.setStyle(\"\");\n    };\n\n    _this.handleTaskDrop = function (e) {\n      e.preventDefault();\n\n      var tasks = _toConsumableArray(_this.state.tasks);\n\n      var old_index = _this.state.dragged_index;\n      var new_index = e.currentTarget.dataset.index; // this.setState({\n      //   drop_id: null\n      // });\n\n      _this.drop_id = null;\n      e.currentTarget.style.background = \"\";\n\n      _this.array_move(tasks, parseInt(old_index, 10), parseInt(new_index, 10));\n\n      _this.updateTasks(tasks);\n    };\n\n    return _this;\n  }\n\n  _createClass(TaskEditor, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var tasks = _toConsumableArray(this.props.selected_job_data.tasks);\n\n      this.setState({\n        tasks: tasks,\n        all_complete: this.checkIfAllComplete(tasks)\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.selected_job_data && this.props.selected_job !== prevProps.selected_job) {\n        var tasks = _toConsumableArray(this.props.selected_job_data.tasks);\n\n        this.setState({\n          tasks: tasks,\n          all_complete: this.checkIfAllComplete(tasks)\n        });\n      }\n    }\n  }, {\n    key: \"checkIfAllComplete\",\n    value: function checkIfAllComplete(tasks) {\n      var progress = 0;\n      var total_progress = 0;\n\n      for (var t = 0; t < tasks.length; t++) {\n        if (tasks[t].completed) {\n          progress++;\n        }\n      }\n\n      total_progress = Math.round(100 * (progress / tasks.length)) || 0;\n      return total_progress === 100;\n    }\n  }, {\n    key: \"updateTasks\",\n    value: function updateTasks(tasks) {\n      // this.props.selected_job_data.tasks = tasks;\n      var progress = 0;\n      var total_progress = 0;\n\n      for (var t = 0; t < tasks.length; t++) {\n        if (tasks[t].completed) {\n          progress++;\n        }\n      }\n\n      total_progress = Math.round(100 * (progress / tasks.length)) || 0;\n      this.props.updateJobProgress(this.props.selected_job, tasks, total_progress);\n      this.setState({\n        tasks: tasks,\n        all_complete: total_progress === 100\n      });\n    }\n  }, {\n    key: \"changeMode\",\n    value: function changeMode(mode) {\n      this.setState({\n        mode: mode\n      });\n    }\n  }, {\n    key: \"getMenu\",\n    value: function getMenu() {\n      var _this2 = this;\n\n      var menu = React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"button-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"task name\",\n        value: this.state.add_task_text,\n        onChange: this.handleAddChange,\n        onKeyPress: this.handleAddKeyPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          _this2.handleAddTask(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"add task\")))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, !this.state.all_complete ? React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          _this2.handleCompleteAll(e);\n        },\n        disabled: !this.state.tasks.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-check-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"mark all as complete\")) : React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          _this2.handleIncompleteAll(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"far fa-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"mark all as incomplete\")), React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          _this2.handleDeleteAll();\n        },\n        disabled: !this.state.tasks.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"delete all\"))));\n      return menu;\n    }\n  }, {\n    key: \"array_move\",\n    value: function array_move(arr, old_index, new_index) {\n      if (new_index >= arr.length) {\n        var k = new_index - arr.length + 1;\n\n        while (k--) {\n          arr.push(undefined);\n        }\n      }\n\n      arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n      return arr; // for testing\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tasks = _toConsumableArray(this.state.tasks);\n\n      var task_nodes = [];\n\n      for (var t = 0; t < tasks.length; t++) {\n        task_nodes.push(React.createElement(\"li\", {\n          key: this.props.selected_job + \"_\" + tasks[t].id,\n          className: \"task\" + (tasks[t].completed ? \" completed\" : \"\") + (tasks[t].id === this.state.currently_editing ? \" currently-editing\" : \"\") + (this.state.drop_id === tasks[t].id ? \" drop-\" + this.state.drop_location : \"\"),\n          \"data-id\": tasks[t].id,\n          \"data-index\": t,\n          onClick: this.handleTaskClick,\n          draggable: true,\n          onDrag: this.handleTaskDragStart,\n          onDragOver: this.handleTaskDragOver,\n          onDragLeave: this.handleTaskDragLeave,\n          onDrop: this.handleTaskDrop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"icon-holder\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-check-circle check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }), React.createElement(\"i\", {\n          className: \"far fa-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        })), this.state.currently_editing === tasks[t].id ? React.createElement(\"input\", {\n          className: \"\",\n          defaultValue: tasks[t].name,\n          onChange: this.handleEditChange,\n          onKeyPress: this.handleEditKeyPress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        }) : React.createElement(\"span\", {\n          className: \"task-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, tasks[t].name)), this.state.currently_editing === tasks[t].id ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"icon-button\",\n          onClick: this.handleConfirmEdit,\n          title: \"Apply\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"icon-button\",\n          onClick: this.handleCancelEdit,\n          title: \"Cancel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-times\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }))) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"icon-button\",\n          onClick: this.handleEdit,\n          title: \"Edit Task\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"icon-button\",\n          onClick: this.handleDelete,\n          title: \"Delete Task\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-trash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        })))));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"task-editor\" + (this.state.loaded ? \"\" : \" loading\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, this.getMenu(), React.createElement(\"div\", {\n        className: \"task-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, task_nodes)));\n    }\n  }]);\n\n  return TaskEditor;\n}(React.Component);\n\nexport default TaskEditor;","map":{"version":3,"sources":["/Users/matt/Work/Projul/projul-prototype/src/components/task-editor.js"],"names":["React","TaskEditor","state","tasks","add_task_text","temp_edit_text","currently_editing","all_complete","handleTaskClick","e","id","currentTarget","dataset","t","length","task","completed","updateTasks","handleCompleteAll","handleIncompleteAll","handleDeleteAll","handleDelete","preventDefault","stopPropagation","parentNode","push","handleAddKeyPress","key","handleAddTask","handleAddChange","setState","value","Math","random","name","handleEdit","handleEditKeyPress","handleConfirmEdit","handleEditChange","handleCancelEdit","handleTaskDragStart","dragged_id","target","dragged_index","index","handleTaskDragOver","drop_location","window","setStyle","drop_id","drop_index","handleTaskDragLeave","handleTaskDrop","old_index","new_index","style","background","array_move","parseInt","props","selected_job_data","checkIfAllComplete","prevProps","selected_job","progress","total_progress","round","updateJobProgress","mode","menu","arr","k","undefined","splice","task_nodes","loaded","getMenu","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n\nclass TaskEditor extends React.Component {\n  state = {\n    tasks:[],\n    add_task_text: \"\",\n    temp_edit_text: \"\",\n    currently_editing: 0,\n    all_complete: false\n  };\n\n  componentDidMount() {\n    let tasks = [...this.props.selected_job_data.tasks];\n    this.setState({\n      tasks: tasks,\n      all_complete: this.checkIfAllComplete(tasks)\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.selected_job_data && this.props.selected_job !== prevProps.selected_job) {\n      var tasks = [...this.props.selected_job_data.tasks];\n      this.setState({\n        tasks: tasks,\n        all_complete: this.checkIfAllComplete(tasks)\n      });\n    }\n  }\n\n  checkIfAllComplete(tasks) {\n    let progress = 0;\n    let total_progress = 0;\n    for (let t=0; t<tasks.length; t++) {\n      if (tasks[t].completed) {\n        progress++;\n      }\n    }\n    total_progress = Math.round(100*(progress / tasks.length)) || 0;\n    return total_progress === 100;\n  }\n\n  handleTaskClick = (e) => {\n    let id=e.currentTarget.dataset.id;\n    if (this.state.currently_editing !== id) {\n      let tasks = [...this.state.tasks];\n      for (var t=0; t<tasks.length; t++) {\n        var task = tasks[t];\n        if (task.id === id) {\n          task.completed = !task.completed;\n        }\n      }\n      this.updateTasks(tasks);\n    }\n  }\n\n  handleCompleteAll = () => {\n    let tasks = [...this.state.tasks];\n    for (var t=0; t<tasks.length; t++) {\n      var task = tasks[t];\n      task.completed = true;\n    }\n    this.updateTasks(tasks);\n  }\n\n  handleIncompleteAll = () => {\n    let tasks = [...this.state.tasks];\n    for (var t=0; t<tasks.length; t++) {\n      var task = tasks[t];\n      task.completed = false;\n    }\n    this.updateTasks(tasks);\n  }\n\n  handleDeleteAll = () => {\n    let tasks = [];\n    this.updateTasks(tasks);\n  }\n\n  handleDelete = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    let id=e.currentTarget.parentNode.parentNode.dataset.id;\n    let tasks = [];\n    for (var t=0; t<this.state.tasks.length; t++) {\n      var task = this.state.tasks[t];\n      if (task.id !== id) {\n        tasks.push(this.state.tasks[t]);\n      }\n    }\n    this.updateTasks(tasks);\n  }\n\n\n  handleAddKeyPress = (e) => {\n    if(e.key === 'Enter'){\n      this.handleAddTask();\n    }\n  }\n\n  handleAddChange = (e) => {\n    this.setState({\n      add_task_text: e.currentTarget.value\n    });\n  }\n\n  handleAddTask = (e) => {\n    if (this.state.add_task_text) {\n      let tasks = [...this.state.tasks];\n      tasks.push({\n        id: Math.random()+\"\",\n        name: this.state.add_task_text,\n        completed: false\n      });\n      this.updateTasks(tasks);\n      this.setState({\n        add_task_text: \"\"\n      });\n    }\n  }\n\n\n  handleEdit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    let id=e.currentTarget.parentNode.parentNode.dataset.id;\n    let name = \"\";\n    for (var t=0; t<this.state.tasks.length; t++) {\n      const task = this.state.tasks[t];\n      if (task.id === id) {\n        name = this.state.tasks[t].name;\n      }\n    }\n    this.setState({\n      currently_editing: id,\n      temp_edit_text: name\n    });\n  }\n\n  handleEditKeyPress = (e) => {\n    if(e.key === 'Enter'){\n      this.handleConfirmEdit(e);\n    }\n  }\n\n  handleEditChange = (e) => {\n    this.setState({\n      temp_edit_text: e.currentTarget.value\n    });\n  }\n\n  handleCancelEdit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.setState({\n      currently_editing: null\n    });\n  }\n\n  handleConfirmEdit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    let id=this.state.currently_editing;\n    let tasks = [...this.state.tasks];\n    for (var t=0; t<tasks.length; t++) {\n      var task = tasks[t];\n      if (task.id === id) {\n        tasks[t].name = this.state.temp_edit_text;\n      }\n    }\n    this.updateTasks(tasks);\n    this.setState({\n      currently_editing: null\n    });\n  }\n\n  updateTasks (tasks) {\n    // this.props.selected_job_data.tasks = tasks;\n    let progress = 0;\n    let total_progress = 0;\n    for (let t=0; t<tasks.length; t++) {\n      if (tasks[t].completed) {\n        progress++;\n      }\n    }\n    total_progress = Math.round(100*(progress / tasks.length)) || 0;\n\n    this.props.updateJobProgress(this.props.selected_job, tasks, total_progress);\n    this.setState({\n      tasks: tasks,\n      all_complete: total_progress === 100\n    });\n  }\n\n  changeMode (mode) {\n    this.setState({\n      mode: mode\n    });\n  }\n\n  getMenu () {\n    const menu = (\n      <div className=\"menu\">\n        <div>\n          <div className=\"button-group\">\n            <input type=\"text\" placeholder=\"task name\" value={this.state.add_task_text} onChange={this.handleAddChange} onKeyPress={this.handleAddKeyPress} />\n            <button onClick={(e)=>{this.handleAddTask(e)}}><i className=\"fas fa-plus\"></i><span>add task</span></button>\n          </div>\n        </div>\n        <div>\n          {!this.state.all_complete ?(\n            <button onClick={(e)=>{this.handleCompleteAll(e)}} disabled={!this.state.tasks.length}><i className=\"fas fa-check-circle\"></i><span>mark all as complete</span></button>\n          ):(\n            <button onClick={(e)=>{this.handleIncompleteAll(e)}}><i className=\"far fa-circle\"></i><span>mark all as incomplete</span></button>\n          )}\n          <button onClick={(e)=>{this.handleDeleteAll()}} disabled={!this.state.tasks.length}><i className=\"fas fa-trash\"></i><span>delete all</span></button>\n        </div>\n      </div>\n    );\n    return menu;\n  }\n\n  handleTaskDragStart = (e) => {\n    // e.dataTransfer.setData(\"text\", e.target.dataset.id);\n    this.setState({\n      dragged_id: e.target.dataset.id,\n      dragged_index: e.target.dataset.index\n    });\n  }\n\n  handleTaskDragOver = (e) => {\n    e.preventDefault();\n    let drop_location;\n    if (e.currentTarget.dataset.index > this.state.dragged_index) {\n      // drop_location = \"bottom\";\n      // e.currentTarget.style.background = \"blue\";\n      window.setStyle(`\n        [data-id=` + e.currentTarget.dataset.id + `] {\n          background-color: blue;\n        }\n      `);\n    } else {\n      window.setStyle(`\n        [data-id=` + e.currentTarget.dataset.id + `] {\n          background-color: red;\n        }\n      `);\n      // drop_location = \"top\";\n      // e.currentTarget.style.background = \"red\";\n    }\n    // this.setState({\n    //   drop_id: e.currentTarget.dataset.id,\n    //   drop_index: e.currentTarget.dataset.index,\n    //   drop_location: drop_location\n    // });\n    this.drop_id = e.currentTarget.dataset.id;\n    this.drop_index = e.currentTarget.dataset.index;\n\n\n  }\n\n  handleTaskDragLeave = (e) => {\n    e.preventDefault();\n    // e.currentTarget.style.background = \"\";\n    // e.currentTarget.style.borderTop = \"\";\n    window.setStyle(``);\n  }\n\n  array_move(arr, old_index, new_index) {\n    if (new_index >= arr.length) {\n      var k = new_index - arr.length + 1;\n      while (k--) {\n        arr.push(undefined);\n      }\n    }\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n    return arr; // for testing\n  };\n\n  handleTaskDrop = (e) => {\n    e.preventDefault();\n    let tasks = [...this.state.tasks];\n    let old_index = this.state.dragged_index;\n    let new_index = e.currentTarget.dataset.index;\n\n    // this.setState({\n    //   drop_id: null\n    // });\n    this.drop_id = null;\n    e.currentTarget.style.background = \"\";\n\n    this.array_move(tasks, parseInt(old_index,10), parseInt(new_index,10));\n\n    this.updateTasks(tasks);\n  }\n\n\n  render() {\n    let tasks = [...this.state.tasks];\n    let task_nodes = [];\n\n    for (var t=0; t<tasks.length; t++) {\n      task_nodes.push((\n        <li\n          key={this.props.selected_job + \"_\" + tasks[t].id}\n          className={\n            \"task\" +\n            (tasks[t].completed ? \" completed\" : \"\") +\n            (tasks[t].id === this.state.currently_editing ? \" currently-editing\" : \"\") +\n            (this.state.drop_id === tasks[t].id ? (\" drop-\"+this.state.drop_location) : \"\")\n          }\n          data-id={tasks[t].id}\n          data-index={t}\n          onClick={this.handleTaskClick}\n\n          draggable\n          onDrag={this.handleTaskDragStart}\n\n          onDragOver={this.handleTaskDragOver}\n          onDragLeave={this.handleTaskDragLeave}\n          onDrop={this.handleTaskDrop}\n        >\n          <h3>\n            <span className=\"icon-holder\"><i className=\"fas fa-check-circle check\"></i><i className=\"far fa-circle\"></i></span>\n            {this.state.currently_editing === tasks[t].id ? (\n              <input className=\"\" defaultValue={tasks[t].name} onChange={this.handleEditChange} onKeyPress={this.handleEditKeyPress} />\n            ):(\n              <span className=\"task-name\">{tasks[t].name}</span>\n            )}\n          </h3>\n          {this.state.currently_editing === tasks[t].id ? (\n            <div>\n              <button className=\"icon-button\" onClick={this.handleConfirmEdit} title=\"Apply\"><i className=\"fas fa-check\"></i></button>\n              <button className=\"icon-button\" onClick={this.handleCancelEdit} title=\"Cancel\"><i className=\"fas fa-times\"></i></button>\n            </div>\n          ):(\n            <div>\n              <button className=\"icon-button\" onClick={this.handleEdit} title=\"Edit Task\"><i className=\"fas fa-edit\"></i></button>\n              <button className=\"icon-button\" onClick={this.handleDelete} title=\"Delete Task\"><i className=\"fas fa-trash\"></i></button>\n            </div>\n          )}\n        </li>\n      ));\n    }\n\n    return (\n      <div className={\"task-editor\" + (this.state.loaded?\"\":\" loading\")} >\n        {this.getMenu()}\n        <div className=\"task-list\">\n          <ul>{task_nodes}</ul>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default TaskEditor\n"]},"metadata":{},"sourceType":"module"}