{"ast":null,"code":"import _classCallCheck from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matt/Work/Projul/projul-prototype/src/components/projects.js\";\nimport React from 'react';\nimport Project from './project';\nimport TaskDetails from './task-details';\nimport { ProjectList, GenerateProjectTasks } from '../utilities/content';\n\nvar Projects =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Projects, _React$Component);\n\n  function Projects(props) {\n    var _this;\n\n    _classCallCheck(this, Projects);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Projects).call(this, props));\n\n    _this.handleTaskClick = function (project_id, id) {\n      _this.selectProject(project_id, id);\n    };\n\n    _this.state = {\n      loaded: false,\n      selected_task: null,\n      last_selected_project: null,\n      last_selected_task: null\n    };\n    console.log(GenerateProjectTasks());\n    return _this;\n  }\n\n  _createClass(Projects, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        var projects_by_id = {};\n\n        for (var p = 0; p < ProjectList.length; p++) {\n          projects_by_id[ProjectList[p].id] = ProjectList[p];\n        }\n\n        _this2.setState({\n          loaded: true,\n          projects_by_id: projects_by_id\n        });\n      }, 50);\n    }\n  }, {\n    key: \"selectProject\",\n    value: function selectProject(id, task) {\n      var _this3 = this;\n\n      if (this.state.selected_project && this.state.selected_project !== id) {\n        setTimeout(function () {\n          _this3.setState({\n            transition_last_selected_project: false\n          });\n        }, 50);\n      }\n\n      this.setState({\n        last_selected_project: this.state.selected_project,\n        last_selected_task: this.state.selected_task ? this.state.selected_task.id : null,\n        transition_last_selected_project: this.state.selected_project && this.state.selected_project !== id,\n        selected_project: id,\n        selected_task: task\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var projects = [];\n\n      for (var p = 0; p < ProjectList.length; p++) {\n        projects.push(React.createElement(\"div\", {\n          key: \"project-\" + ProjectList[p].id,\n          className: \"card\" + (p < 5 ? \" d\" + (p + 1) : \" d5\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(Project, {\n          id: ProjectList[p].id,\n          project_data: ProjectList[p],\n          onSelectProject: function onSelectProject(id, task) {\n            _this4.selectProject(id, task);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        })));\n      }\n\n      return React.createElement(\"div\", {\n        className: this.state.loaded ? \"loaded\" : \"unloaded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.selected_task ? React.createElement(\"div\", {\n        id: \"project-details\",\n        className: \"card\" + (this.state.selected_task ? \" show\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header-color\",\n        style: {\n          backgroundColor: this.state.projects_by_id[this.state.selected_project].color || \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"selected_project\" + (this.state.transition_last_selected_project ? \" transition_last_selected\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.state.last_selected_project ? React.createElement(Project, {\n        id: this.state.last_selected_project,\n        last_selected: true,\n        project_data: this.state.projects_by_id[this.state.last_selected_project],\n        onSelectProject: function onSelectProject(id, task) {// this.selectProject(id, task);\n        },\n        selected_task: this.state.last_selected_task,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }) : [], React.createElement(Project, {\n        id: this.state.selected_project,\n        project_data: this.state.projects_by_id[this.state.selected_project],\n        onSelectProject: function onSelectProject(id, task) {\n          _this4.selectProject(id, task);\n        },\n        selected_task: this.state.selected_task.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(TaskDetails, {\n        selected_task: this.state.selected_task,\n        handleTaskClick: this.handleTaskClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        className: \"project-list\" + (this.state.selected_task ? \"\" : \" show\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, projects));\n    }\n  }]);\n\n  return Projects;\n}(React.Component);\n\nexport default Projects;","map":{"version":3,"sources":["/Users/matt/Work/Projul/projul-prototype/src/components/projects.js"],"names":["React","Project","TaskDetails","ProjectList","GenerateProjectTasks","Projects","props","handleTaskClick","project_id","id","selectProject","state","loaded","selected_task","last_selected_project","last_selected_task","console","log","setTimeout","projects_by_id","p","length","setState","task","selected_project","transition_last_selected_project","projects","push","backgroundColor","color","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAAQC,WAAR,EAAqBC,oBAArB,QAAgD,sBAAhD;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,UAsBnBC,eAtBmB,GAsBD,UAACC,UAAD,EAAaC,EAAb,EAAoB;AACpC,YAAKC,aAAL,CAAmBF,UAAnB,EAA+BC,EAA/B;AACD,KAxBkB;;AAEjB,UAAKE,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,aAAa,EAAE,IAFJ;AAGXC,MAAAA,qBAAqB,EAAE,IAHZ;AAIXC,MAAAA,kBAAkB,EAAE;AAJT,KAAb;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,oBAAoB,EAAhC;AARiB;AASlB;;;;wCACmB;AAAA;;AAClBc,MAAAA,UAAU,CAAC,YAAI;AACb,YAAIC,cAAc,GAAG,EAArB;;AACA,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACjB,WAAW,CAACkB,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCD,UAAAA,cAAc,CAAChB,WAAW,CAACiB,CAAD,CAAX,CAAeX,EAAhB,CAAd,GAAkCN,WAAW,CAACiB,CAAD,CAA7C;AACD;;AACD,QAAA,MAAI,CAACE,QAAL,CAAc;AACZV,UAAAA,MAAM,EAAE,IADI;AAEZO,UAAAA,cAAc,EAAEA;AAFJ,SAAd;AAID,OATS,EASP,EATO,CAAV;AAUD;;;kCAIcV,E,EAAIc,I,EAAM;AAAA;;AACvB,UAAI,KAAKZ,KAAL,CAAWa,gBAAX,IAAgC,KAAKb,KAAL,CAAWa,gBAAX,KAAgCf,EAApE,EAAyE;AACvES,QAAAA,UAAU,CAAC,YAAI;AACb,UAAA,MAAI,CAACI,QAAL,CAAc;AACZG,YAAAA,gCAAgC,EAAE;AADtB,WAAd;AAGD,SAJS,EAIP,EAJO,CAAV;AAKD;;AACD,WAAKH,QAAL,CAAc;AACZR,QAAAA,qBAAqB,EAAE,KAAKH,KAAL,CAAWa,gBADtB;AAEZT,QAAAA,kBAAkB,EAAE,KAAKJ,KAAL,CAAWE,aAAX,GAAyB,KAAKF,KAAL,CAAWE,aAAX,CAAyBJ,EAAlD,GAAqD,IAF7D;AAGZgB,QAAAA,gCAAgC,EAAG,KAAKd,KAAL,CAAWa,gBAAX,IAAgC,KAAKb,KAAL,CAAWa,gBAAX,KAAgCf,EAHvF;AAIZe,QAAAA,gBAAgB,EAAEf,EAJN;AAKZI,QAAAA,aAAa,EAAEU;AALH,OAAd;AAOD;;;6BACQ;AAAA;;AACP,UAAIG,QAAQ,GAAG,EAAf;;AAEA,WAAK,IAAIN,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACjB,WAAW,CAACkB,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCM,QAAAA,QAAQ,CAACC,IAAT,CACE;AAAK,UAAA,GAAG,EAAE,aAAWxB,WAAW,CAACiB,CAAD,CAAX,CAAeX,EAApC;AAAwC,UAAA,SAAS,EAAE,UAAUW,CAAC,GAAC,CAAF,GAAI,QAAMA,CAAC,GAAC,CAAR,CAAJ,GAAe,KAAzB,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AACE,UAAA,EAAE,EAAEjB,WAAW,CAACiB,CAAD,CAAX,CAAeX,EADrB;AAEE,UAAA,YAAY,EAAEN,WAAW,CAACiB,CAAD,CAF3B;AAGE,UAAA,eAAe,EAAE,yBAACX,EAAD,EAAKc,IAAL,EAAY;AAC3B,YAAA,MAAI,CAACb,aAAL,CAAmBD,EAAnB,EAAuBc,IAAvB;AACD,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAWD;;AAED,aACE;AAAK,QAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWC,MAAX,GAAkB,QAAlB,GAA2B,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWE,aAAX,GACC;AAAK,QAAA,EAAE,EAAC,iBAAR;AAA0B,QAAA,SAAS,EAAE,UAAU,KAAKF,KAAL,CAAWE,aAAX,GAAyB,OAAzB,GAAiC,EAA3C,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,KAAK,EAAE;AACnCe,UAAAA,eAAe,EAAE,KAAKjB,KAAL,CAAWQ,cAAX,CAA0B,KAAKR,KAAL,CAAWa,gBAArC,EAAuDK,KAAvD,IAAgE;AAD9C,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE;AAAK,QAAA,SAAS,EAAG,sBACd,KAAKlB,KAAL,CAAWc,gCAAX,GAA8C,2BAA9C,GAA4E,EAD9D,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGG,KAAKd,KAAL,CAAWG,qBAAX,GACC,oBAAC,OAAD;AACE,QAAA,EAAE,EAAE,KAAKH,KAAL,CAAWG,qBADjB;AAEE,QAAA,aAAa,EAAE,IAFjB;AAGE,QAAA,YAAY,EAAE,KAAKH,KAAL,CAAWQ,cAAX,CAA0B,KAAKR,KAAL,CAAWG,qBAArC,CAHhB;AAIE,QAAA,eAAe,EAAE,yBAACL,EAAD,EAAKc,IAAL,EAAY,CAC3B;AACD,SANH;AAOE,QAAA,aAAa,EAAE,KAAKZ,KAAL,CAAWI,kBAP5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAUC,EAbJ,EAcE,oBAAC,OAAD;AACE,QAAA,EAAE,EAAE,KAAKJ,KAAL,CAAWa,gBADjB;AAEE,QAAA,YAAY,EAAE,KAAKb,KAAL,CAAWQ,cAAX,CAA0B,KAAKR,KAAL,CAAWa,gBAArC,CAFhB;AAGE,QAAA,eAAe,EAAE,yBAACf,EAAD,EAAKc,IAAL,EAAY;AAC3B,UAAA,MAAI,CAACb,aAAL,CAAmBD,EAAnB,EAAuBc,IAAvB;AACD,SALH;AAME,QAAA,aAAa,EAAE,KAAKZ,KAAL,CAAWE,aAAX,CAAyBJ,EAN1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CALF,EA4BE,oBAAC,WAAD;AACE,QAAA,aAAa,EAAE,KAAKE,KAAL,CAAWE,aAD5B;AAEE,QAAA,eAAe,EAAE,KAAKN,eAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BF,CADD,GAmCC;AAAK,QAAA,SAAS,EAAE,kBAAgB,KAAKI,KAAL,CAAWE,aAAX,GAAyB,EAAzB,GAA4B,OAA5C,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGa,QADH,CApCJ,CADF;AA2CD;;;;EAtGoB1B,KAAK,CAAC8B,S;;AAyG7B,eAAezB,QAAf","sourcesContent":["import React from 'react';\nimport Project from './project';\nimport TaskDetails from './task-details';\nimport {ProjectList, GenerateProjectTasks} from '../utilities/content'\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      selected_task: null,\n      last_selected_project: null,\n      last_selected_task: null\n    };\n    console.log(GenerateProjectTasks());\n  }\n  componentDidMount() {\n    setTimeout(()=>{\n      var projects_by_id = {};\n      for (var p=0;p<ProjectList.length; p++) {\n        projects_by_id[ProjectList[p].id]=ProjectList[p];\n      }\n      this.setState({\n        loaded: true,\n        projects_by_id: projects_by_id\n      });\n    }, 50);\n  }\n  handleTaskClick = (project_id, id) => {\n    this.selectProject(project_id, id);\n  }\n  selectProject (id, task) {\n    if (this.state.selected_project && (this.state.selected_project !== id)) {\n      setTimeout(()=>{\n        this.setState({\n          transition_last_selected_project: false\n        });\n      }, 50);\n    }\n    this.setState({\n      last_selected_project: this.state.selected_project,\n      last_selected_task: this.state.selected_task?this.state.selected_task.id:null,\n      transition_last_selected_project: (this.state.selected_project && (this.state.selected_project !== id)),\n      selected_project: id,\n      selected_task: task\n    });\n  }\n  render() {\n    let projects = [];\n\n    for (let p=0; p<ProjectList.length; p++) {\n      projects.push((\n        <div key={\"project-\"+ProjectList[p].id} className={\"card\" + (p<5?\" d\"+(p+1):\" d5\")}>\n          <Project\n            id={ProjectList[p].id}\n            project_data={ProjectList[p]}\n            onSelectProject={(id, task)=>{\n              this.selectProject(id, task);\n            }}\n          />\n        </div>\n      ));\n    }\n\n    return (\n      <div className={this.state.loaded?\"loaded\":\"unloaded\"}>\n        {this.state.selected_task?(\n          <div id=\"project-details\" className={\"card\" + (this.state.selected_task?\" show\":\"\")}>\n            <div className=\"header-color\" style={{\n              backgroundColor: this.state.projects_by_id[this.state.selected_project].color || \"black\"\n            }} />\n\n            <div className={ \"selected_project\" +\n              (this.state.transition_last_selected_project ? \" transition_last_selected\" : \"\")\n            }>\n              {this.state.last_selected_project? (\n                <Project\n                  id={this.state.last_selected_project}\n                  last_selected={true}\n                  project_data={this.state.projects_by_id[this.state.last_selected_project]}\n                  onSelectProject={(id, task)=>{\n                    // this.selectProject(id, task);\n                  }}\n                  selected_task={this.state.last_selected_task}\n                />\n              ):[]}\n              <Project\n                id={this.state.selected_project}\n                project_data={this.state.projects_by_id[this.state.selected_project]}\n                onSelectProject={(id, task)=>{\n                  this.selectProject(id, task);\n                }}\n                selected_task={this.state.selected_task.id}\n              />\n            </div>\n            <TaskDetails\n              selected_task={this.state.selected_task}\n              handleTaskClick={this.handleTaskClick}\n            />\n          </div>\n        ) : (\n          <div className={\"project-list\"+(this.state.selected_task?\"\":\" show\")}>\n            {projects}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Projects\n"]},"metadata":{},"sourceType":"module"}