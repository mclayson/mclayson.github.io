{"ast":null,"code":"import { DAILY_WORK_HOURS, WEEKEND } from '../config/account-settings';\nexport var DataTemplates = {\n  Task: {\n    id: \"task id\",\n    name: \"name\",\n    description: \"description\",\n    location: \"address\",\n    assigned_user: \"assigned user id\",\n    subscribers: [],\n    start_date: \"scheduled start date\",\n    deadline: \"deadline\",\n    completed_date: \"\",\n    status: \"\",\n    parent_project: \"project id\",\n    parent_job: \"job id\",\n    blob_uri: \"\"\n  },\n  Job: {\n    id: \"job id\",\n    name: \"name\",\n    description: \"description\",\n    location: \"address\",\n    assigned_users: [],\n    tasks: [],\n    subscribers: [],\n    appointments: [{\n      start_date: \"\",\n      end_date: \"\"\n    }],\n    completed_date: \"\",\n    progress: \"\",\n    parent_project: \"project id\",\n    blob_uri: \"\"\n  },\n  Project: {\n    id: \"project id\",\n    name: \"name\",\n    description: \"description\",\n    location: \"address\",\n    assigned_pm: \"user id\",\n    customer: \"user id\",\n    tasks: [],\n    jobs: [],\n    subscribers: [],\n    start_date: \"scheduled start date\",\n    end_date: \"scheduled end date\",\n    completed_date: \"\",\n    progress: \"\",\n    status: \"\",\n    blob_uri: \"\"\n  },\n  Contact: {\n    id: \"contact id\",\n    name: \"\",\n    type: \"\",\n    description: \"\",\n    location: \"\",\n    phones: [],\n    emails: [],\n    sm_uris: []\n  },\n  User: {\n    id: \"user id\",\n    contact: \"contact id\",\n    roles: [],\n    tasks: [],\n    jobs: [],\n    projects: [],\n    subscriptions: []\n  },\n  Lead: {\n    id: \"lead id\",\n    contact: \"contact id\",\n    source: \"\",\n    company: \"\",\n    type: \"\",\n    description: \"\",\n    tasks: []\n  }\n};\nvar PickedColors = {};\nvar RandomColors = [\"#1abc9c\", \"#16a085\", \"#27ae60\", \"#3498db\", \"#2980b9\", \"#4a69bd\", \"#6a89cc\", \"#60a3bc\", \"#079992\", \"#3c6382\", \"#d35400\", \"#e74c3c\", \"#e15f41\", \"#e77f67\", \"#c0392b\"];\nexport function GenerateRandomColor() {\n  var color = RandomColors[Math.round(Math.random() * (RandomColors.length - 1))];\n\n  if (!PickedColors[color]) {\n    PickedColors[color] = true;\n    return color;\n  }\n\n  return GenerateRandomColor();\n}\nexport var TradeDistributor = [0, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9];\nexport var Trades = [\"Project Manager\", \"Operations Manager\", \"Plumber\", \"Technician\", \"Electrician\", \"Laborer\", \"Dry Wall Installer\", \"Tile Setter\", \"Hardwood Installer\", \"Framer\"];\nvar JobDefaultTrades = {\n  \"Sign Contract\": \"Customer\",\n  \"Pre Deposit\": \"Customer\",\n  \"Estimation\": \"Project Manager\",\n  \"Demolition\": \"Laborer\",\n  \"Protection\": \"Laborer\",\n  \"Tile Installation\": \"Tile Setter\",\n  \"Hardwood Installation\": \"Hardwood Installer\",\n  \"Plumbing\": \"Plumber\",\n  \"Clean Up\": \"Laborer\",\n  \"Inspection\": \"Project Manager\",\n  \"Final Payment\": \"Customer\"\n};\nvar JobDefaultTasks = {\n  \"Sign Contract\": [\"Sign contract\"],\n  \"Pre Deposit\": [\"Recieve pre deposit\"],\n  \"Estimation\": [\"Complete Estimation\"],\n  \"Demolition\": [\"Break it down\"],\n  \"Protection\": [\"Lay down plastic\", \"Tape up walls\"],\n  \"Tile Installation\": [\"Put the tile in\"],\n  \"Hardwood Installation\": [\"Put the hardwood in\"],\n  \"Plumbing\": [\"Fix the pipes\"],\n  \"Clean Up\": [\"Clean up mess\"],\n  \"Inspection\": [\"Complete Inspection\"],\n  \"Final Payment\": [\"Reviece final payment\"]\n};\nvar JobIcons = {\n  \"Sign Contract\": \"fas fa-file-signature\",\n  \"Pre Deposit\": \"fas fa-dollar-sign\",\n  \"Estimation\": \"fas fa-balance-scale\",\n  \"Demolition\": \"fas fa-hammer\",\n  \"Protection\": \"fas fa-tape\",\n  \"Tile Instalation\": \"fas fa-toolbox\",\n  \"Plumbing\": \"fas fa-tint\",\n  \"Clean Up\": \"fas fa-broom\",\n  \"Inspection\": \"fas fa-clipboard-list\",\n  \"Final Payment\": \"fas fa-dollar-sign\"\n};\nvar DefaultJobIcon = \"fas fa-toolbox\";\nexport function GenerateTasks(name, scheduled, progress) {\n  var tasks = [];\n\n  if (JobDefaultTasks[name]) {\n    for (var t = 0; t < JobDefaultTasks[name].length; t++) {\n      tasks.push({\n        name: JobDefaultTasks[name][t],\n        completed: scheduled && progress ? !!(Math.round(Math.random() * 100) % 5) : false,\n        id: Math.random() + \"\"\n      });\n    }\n  }\n\n  return tasks;\n}\nvar job_iterator = 0;\nexport function GenerateJob(project, name, date, scheduled, progress) {\n  job_iterator++;\n  var start_time = 6 + Math.random() * DAILY_WORK_HOURS / 4;\n  var end_time = Math.max(1, start_time + Math.random() * DAILY_WORK_HOURS);\n  var id = \"t\" + job_iterator + \"p\" + project.id; //var scheduled = Math.round(Math.random()*100) % 4;\n\n  var default_trade = JobDefaultTrades[name];\n  var user;\n\n  if (scheduled && default_trade && UsersByTrade[default_trade]) {\n    if (default_trade === \"Customer\") {\n      for (var u = 0; u < UsersByTrade[default_trade].length; u++) {\n        if (project.id === UsersByTrade[default_trade][u].visible_projects[0]) {\n          user = UsersByTrade[default_trade][u];\n        }\n      }\n\n      if (!user) {\n        scheduled = false;\n      }\n    } else {\n      user = UsersByTrade[default_trade][Math.floor(Math.random() * UsersByTrade[default_trade].length)];\n    }\n  } else {\n    scheduled = false;\n  }\n\n  var tasks = GenerateTasks(name, scheduled, progress);\n  progress = 0;\n\n  for (var t = 0; t < tasks.length; t++) {\n    if (tasks[t].completed) {\n      progress++;\n    }\n  }\n\n  var job = {\n    start_date: scheduled ? new Date(date.getFullYear(), date.getMonth(), date.getDate(), start_time) : null,\n    end_date: scheduled ? new Date(date.getFullYear(), date.getMonth(), date.getDate(), end_time, -Math.round(Math.random() * 10)) : null,\n    assigned_user: scheduled ? user.user_id : null,\n    project_id: project.id,\n    project_color: project.color,\n    project_name: project.name,\n    default_trade: default_trade,\n    name: name,\n    icon: JobIcons[name] || DefaultJobIcon,\n    progress: scheduled ? Math.round(100 * (progress / tasks.length)) || 0 : 0,\n    //scheduled ? Math.min(Math.round(Math.random()*200),100) : 0,\n    id: id,\n    tasks: tasks\n  };\n\n  if (user) {\n    user.jobs.push(job.id);\n  }\n\n  return job;\n}\nexport var JobsByMonth = {};\nexport var JobsById = {};\nexport var UsersById = {};\nexport var UsersByTrade = {\n  Customer: []\n};\nexport function CreateCustomerUser(project) {\n  var user = {\n    \"jobs\": [],\n    \"user_id\": Math.random(),\n    \"first_name\": \"\",\n    \"last_name\": project.name.substr(0, project.name.indexOf(' ')),\n    \"trade_name\": \"Customer\",\n    visible_projects: [project.id]\n  };\n  UsersByTrade[\"Customer\"].push(user);\n  Users.push(user);\n}\nexport function GenerateProjectJobs() {\n  var today = new Date();\n  var weekend_ref = {};\n\n  for (var w = 0; w < WEEKEND.length; w++) {\n    weekend_ref[WEEKEND[w]] = true;\n  }\n\n  for (var u = 0; u < Users.length; u++) {\n    var user = Users[u];\n    UsersByTrade[user.trade_name] = UsersByTrade[user.trade_name] || [];\n    UsersByTrade[user.trade_name].push(user);\n  }\n\n  for (var p = 0; p < ProjectList.length; p++) {\n    var project = ProjectList[p];\n    var start_date = new Date(today.getFullYear(), today.getMonth(), today.getDate() - p * 2); //Math.round(project.temp_progress*2));\n\n    var weekend_adjuster = 0;\n    CreateCustomerUser(project);\n\n    for (var t = 0; t < project.temp_jobs.length; t++) {\n      var date = new Date(start_date.getFullYear(), start_date.getMonth(), start_date.getDate() + t + weekend_adjuster);\n      var progress = t < p ? 100 : t === p ? Math.min(Math.round(Math.random() * 100), 100) : 0;\n\n      while (weekend_ref[date.getDay()]) {\n        weekend_adjuster++;\n        date = new Date(start_date.getFullYear(), start_date.getMonth(), start_date.getDate() + t + weekend_adjuster);\n      }\n\n      var job = GenerateJob(project, project.temp_jobs[t], date, progress === 0 ? !!Math.round(Math.random() * 100 % 4) : true, progress);\n      project.jobs.push(job.id);\n\n      if (!JobsByMonth[date.getFullYear() + \"_\" + date.getMonth()]) {\n        JobsByMonth[date.getFullYear() + \"_\" + date.getMonth()] = [];\n      }\n\n      JobsByMonth[date.getFullYear() + \"_\" + date.getMonth()].push(job);\n      JobsById[job.id] = job;\n    }\n  }\n}\nexport var ProjectList = [{\n  name: \"Scott Livingroom Remodel\",\n  color: GenerateRandomColor(),\n  //\"hsl(\"+GenerateRandomColor()+\", 80%, 40%)\",\n  id: 100,\n  jobs: [],\n  temp_progress: Math.round(Math.random() * 100) % 5,\n  temp_jobs: [\"Sign Contract\", \"Pre Deposit\", \"Estimation\", \"Demolition\", \"Protection\", \"Tile Installation\", \"Clean Up\", \"Inspection\", \"Final Payment\"]\n}, {\n  name: \"Johnson Kitchen Remodel\",\n  color: GenerateRandomColor(),\n  //\"hsl(\"+GenerateRandomColor()+\", 80%, 40%)\",\n  id: 200,\n  jobs: [],\n  temp_progress: Math.round(Math.random() * 100) % 5,\n  temp_jobs: [\"Sign Contract\", \"Pre Deposit\", \"Estimation\", \"Demolition\", \"Protection\", \"Tile Installation\", \"Plumbing\", \"Clean Up\", \"Inspection\", \"Final Payment\"]\n}, {\n  name: \"Smith Bathroom Remodel\",\n  color: GenerateRandomColor(),\n  //\"hsl(\"+GenerateRandomColor()+\", 80%, 40%)\",\n  id: 300,\n  jobs: [],\n  temp_progress: Math.round(Math.random() * 100) % 5,\n  temp_jobs: [\"Sign Contract\", \"Pre Deposit\", \"Estimation\", \"Demolition\", \"Protection\", \"Tile Installation\", \"Plumbing\", \"Clean Up\", \"Inspection\", \"Final Payment\"]\n}, {\n  name: \"Osborn Kitchen Tile\",\n  color: GenerateRandomColor(),\n  //\"hsl(\"+GenerateRandomColor()+\", 80%, 40%)\",\n  id: 400,\n  jobs: [],\n  temp_progress: Math.round(Math.random() * 100) % 5,\n  temp_jobs: [\"Sign Contract\", \"Pre Deposit\", \"Estimation\", \"Demolition\", \"Protection\", \"Hardwood Installation\", \"Plumbing\", \"Clean Up\", \"Inspection\", \"Final Payment\"]\n}, {\n  name: \"Harmon Home Exterior\",\n  color: GenerateRandomColor(),\n  //\"hsl(\"+GenerateRandomColor()+\", 80%, 40%)\",\n  id: 500,\n  jobs: [],\n  temp_progress: Math.round(Math.random() * 100) % 5,\n  temp_jobs: [\"Sign Contract\", \"Pre Deposit\", \"Estimation\", \"Demolition\", \"Protection\", \"Tile Installation\", \"Clean Up\", \"Inspection\", \"Final Payment\"]\n}, {\n  name: \"Burke Bathroom Remodel\",\n  color: GenerateRandomColor(),\n  //\"hsl(\"+GenerateRandomColor()+\", 80%, 40%)\",\n  id: 600,\n  jobs: [],\n  temp_progress: Math.round(Math.random() * 100) % 5,\n  temp_jobs: [\"Sign Contract\", \"Pre Deposit\", \"Estimation\", \"Demolition\", \"Protection\", \"Tile Installation\", \"Plumbing\", \"Clean Up\", \"Inspection\", \"Final Payment\"]\n}];\nexport var Users = [{\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Tmc Builders Inc\",\n  \"last_name\": \"\",\n  \"trade_name\": \"Contractor,Plumber\"\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Wood N'Things Llc\",\n  \"last_name\": \"\",\n  \"trade_name\": \"Contractor\"\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Cabinet Pros\",\n  \"last_name\": \"\",\n  \"trade_name\": \"Contractor\"\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Gilman Contractors Inc\",\n  \"last_name\": \"\",\n  \"trade_name\": \"Contractor\"\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Crowne Closets & Cabinetry\",\n  \"last_name\": \"\",\n  \"trade_name\": \"Contractor\"\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"The Structures Group Southwest Inc\",\n  \"last_name\": \"\",\n  \"trade_name\": \"Contractor\"\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"B Smith Construction Inc\",\n  \"last_name\": \"\",\n  \"trade_name\": \"Contractor\"\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Turner CO\",\n  \"last_name\": \"\",\n  \"trade_name\": \"Contractor\"\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Tower Mechanical Sv\",\n  \"last_name\": \"\",\n  \"trade_name\": \"Contractor\"\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Rice\",\n  \"last_name\": \"Werthmann\",\n  \"trade_name\": Trades[6]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Ollen\",\n  \"last_name\": \"Hampshire\",\n  \"trade_name\": Trades[5]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Michael\",\n  \"last_name\": \"Goermar\",\n  \"trade_name\": Trades[4]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Dianne\",\n  \"last_name\": \"Rossini\",\n  \"trade_name\": Trades[3] + \",Plumber\"\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Marjan\",\n  \"last_name\": \"Berishaj\",\n  \"trade_name\": Trades[2]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Robert\",\n  \"last_name\": \"Hudson\",\n  \"trade_name\": Trades[1]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Jeremy\",\n  \"last_name\": \"Tilton\",\n  \"trade_name\": Trades[0] + \",Plumber\"\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Lance\",\n  \"last_name\": \"Keever\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Manuel\",\n  \"last_name\": \"Patridge\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Herbert\",\n  \"last_name\": \"Baylor\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Jorge\",\n  \"last_name\": \"Brzezinski\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Calvin\",\n  \"last_name\": \"Youngquist\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Richard\",\n  \"last_name\": \"Sturtz\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Hugh\",\n  \"last_name\": \"Raymond\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Adrian\",\n  \"last_name\": \"Beutel\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Samuel\",\n  \"last_name\": \"Manwaring\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Tony\",\n  \"last_name\": \"Hallowell\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Randy\",\n  \"last_name\": \"Drumm\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Tim\",\n  \"last_name\": \"Geist\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Glen\",\n  \"last_name\": \"Lotz\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Jamie\",\n  \"last_name\": \"Bare\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Adrian\",\n  \"last_name\": \"Cabana\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Albert\",\n  \"last_name\": \"Mossman\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Richard\",\n  \"last_name\": \"Spikes\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Alexander\",\n  \"last_name\": \"Tanksley\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Earl\",\n  \"last_name\": \"Rutledge\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Leon\",\n  \"last_name\": \"Blasi\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Jerome\",\n  \"last_name\": \"Deegan\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Edgar\",\n  \"last_name\": \"Christine\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Thomas\",\n  \"last_name\": \"Alvardo\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}, {\n  \"jobs\": [],\n  \"user_id\": Math.random(),\n  \"first_name\": \"Alexander\",\n  \"last_name\": \"Guidi\",\n  \"trade_name\": Trades[TradeDistributor[Math.floor(Math.random() * TradeDistributor.length)]]\n}];\nGenerateProjectJobs();","map":{"version":3,"sources":["/Users/matt/Work/Projul/projul-prototype/src/utilities/data.js"],"names":["DAILY_WORK_HOURS","WEEKEND","DataTemplates","Task","id","name","description","location","assigned_user","subscribers","start_date","deadline","completed_date","status","parent_project","parent_job","blob_uri","Job","assigned_users","tasks","appointments","end_date","progress","Project","assigned_pm","customer","jobs","Contact","type","phones","emails","sm_uris","User","contact","roles","projects","subscriptions","Lead","source","company","PickedColors","RandomColors","GenerateRandomColor","color","Math","round","random","length","TradeDistributor","Trades","JobDefaultTrades","JobDefaultTasks","JobIcons","DefaultJobIcon","GenerateTasks","scheduled","t","push","completed","job_iterator","GenerateJob","project","date","start_time","end_time","max","default_trade","user","UsersByTrade","u","visible_projects","floor","job","Date","getFullYear","getMonth","getDate","user_id","project_id","project_color","project_name","icon","JobsByMonth","JobsById","UsersById","Customer","CreateCustomerUser","substr","indexOf","Users","GenerateProjectJobs","today","weekend_ref","w","trade_name","p","ProjectList","weekend_adjuster","temp_jobs","min","getDay","temp_progress"],"mappings":"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","sourcesContent":["import {DAILY_WORK_HOURS, WEEKEND} from '../config/account-settings'\n\nexport const DataTemplates = {\n\n  Task: {\n    id: \"task id\",\n    name: \"name\",\n    description: \"description\",\n    location: \"address\",\n    assigned_user: \"assigned user id\",\n    subscribers: [],\n    start_date: \"scheduled start date\",\n    deadline: \"deadline\",\n    completed_date: \"\",\n    status: \"\",\n    parent_project: \"project id\",\n    parent_job: \"job id\",\n    blob_uri: \"\"\n  },\n\n  Job: {\n    id: \"job id\",\n    name: \"name\",\n    description: \"description\",\n    location: \"address\",\n    assigned_users: [],\n    tasks: [],\n    subscribers: [],\n    appointments: [\n      {\n        start_date: \"\",\n        end_date: \"\"\n      }\n    ],\n    completed_date: \"\",\n    progress: \"\",\n    parent_project: \"project id\",\n    blob_uri: \"\"\n  },\n\n  Project: {\n    id: \"project id\",\n    name: \"name\",\n    description: \"description\",\n    location: \"address\",\n    assigned_pm: \"user id\",\n    customer: \"user id\",\n    tasks: [],\n    jobs: [],\n    subscribers: [],\n    start_date: \"scheduled start date\",\n    end_date: \"scheduled end date\",\n    completed_date: \"\",\n    progress: \"\",\n    status: \"\",\n    blob_uri: \"\"\n  },\n\n  Contact: {\n    id: \"contact id\",\n    name: \"\",\n    type: \"\",\n    description: \"\",\n    location: \"\",\n    phones: [],\n    emails: [],\n    sm_uris: []\n  },\n\n  User: {\n    id: \"user id\",\n    contact: \"contact id\",\n    roles: [],\n    tasks: [],\n    jobs: [],\n    projects: [],\n    subscriptions: []\n  },\n\n  Lead: {\n    id: \"lead id\",\n    contact: \"contact id\",\n    source: \"\",\n    company: \"\",\n    type: \"\",\n    description: \"\",\n    tasks: []\n  }\n\n};\n\n\n\n\n\nlet PickedColors = {};\nconst RandomColors = [\n  \"#1abc9c\",\n  \"#16a085\",\n  \"#27ae60\",\n  \"#3498db\",\n  \"#2980b9\",\n  \"#4a69bd\",\n  \"#6a89cc\",\n  \"#60a3bc\",\n  \"#079992\",\n  \"#3c6382\",\n  \"#d35400\",\n  \"#e74c3c\",\n  \"#e15f41\",\n  \"#e77f67\",\n  \"#c0392b\"\n\n];\nexport function GenerateRandomColor () {\n  const color = RandomColors[Math.round(Math.random()*(RandomColors.length-1))];\n  if (!PickedColors[color]) {\n    PickedColors[color] = true;\n    return color;\n  }\n  return GenerateRandomColor();\n}\n\n\nexport const TradeDistributor = [0,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9];\n\nexport const Trades = [\n  \"Project Manager\",\n  \"Operations Manager\",\n  \"Plumber\",\n  \"Technician\",\n  \"Electrician\",\n  \"Laborer\",\n  \"Dry Wall Installer\",\n  \"Tile Setter\",\n  \"Hardwood Installer\",\n  \"Framer\"\n];\n\nconst JobDefaultTrades = {\n  \"Sign Contract\": \"Customer\",\n  \"Pre Deposit\": \"Customer\",\n  \"Estimation\": \"Project Manager\",\n  \"Demolition\": \"Laborer\",\n  \"Protection\": \"Laborer\",\n  \"Tile Installation\": \"Tile Setter\",\n  \"Hardwood Installation\": \"Hardwood Installer\",\n  \"Plumbing\": \"Plumber\",\n  \"Clean Up\": \"Laborer\",\n  \"Inspection\": \"Project Manager\",\n  \"Final Payment\": \"Customer\"\n};\n\nconst JobDefaultTasks = {\n  \"Sign Contract\": [\"Sign contract\"],\n  \"Pre Deposit\": [\"Recieve pre deposit\"],\n  \"Estimation\": [\"Complete Estimation\"],\n  \"Demolition\": [\"Break it down\"],\n  \"Protection\": [\"Lay down plastic\", \"Tape up walls\"],\n  \"Tile Installation\": [\"Put the tile in\"],\n  \"Hardwood Installation\": [\"Put the hardwood in\"],\n  \"Plumbing\": [\"Fix the pipes\"],\n  \"Clean Up\": [\"Clean up mess\"],\n  \"Inspection\": [\"Complete Inspection\"],\n  \"Final Payment\": [\"Reviece final payment\"],\n};\n\nconst JobIcons = {\n  \"Sign Contract\": \"fas fa-file-signature\",\n  \"Pre Deposit\": \"fas fa-dollar-sign\",\n  \"Estimation\": \"fas fa-balance-scale\",\n  \"Demolition\": \"fas fa-hammer\",\n  \"Protection\": \"fas fa-tape\",\n  \"Tile Instalation\": \"fas fa-toolbox\",\n  \"Plumbing\": \"fas fa-tint\",\n  \"Clean Up\": \"fas fa-broom\",\n  \"Inspection\": \"fas fa-clipboard-list\",\n  \"Final Payment\": \"fas fa-dollar-sign\"\n};\nconst DefaultJobIcon = \"fas fa-toolbox\";\n\nexport function GenerateTasks (name, scheduled, progress) {\n  let tasks = [];\n  if (JobDefaultTasks[name]) {\n    for (let t=0; t<JobDefaultTasks[name].length; t++) {\n      tasks.push({\n        name: JobDefaultTasks[name][t],\n        completed: scheduled && progress ? !!(Math.round(Math.random()*100)%5) : false,\n        id: Math.random()+\"\"\n      });\n    }\n  }\n  return tasks;\n}\n\nlet job_iterator = 0;\nexport function GenerateJob (project, name, date, scheduled, progress) {\n  job_iterator++;\n  var start_time = 6+(Math.random()*DAILY_WORK_HOURS/4);\n  var end_time = Math.max(1,start_time+Math.random()*DAILY_WORK_HOURS);\n  var id = \"t\"+job_iterator+\"p\"+project.id;\n  //var scheduled = Math.round(Math.random()*100) % 4;\n  let default_trade = JobDefaultTrades[name];\n  let user;\n  if (scheduled && default_trade && UsersByTrade[default_trade]) {\n    if (default_trade === \"Customer\") {\n      for (var u=0; u<UsersByTrade[default_trade].length; u++) {\n        if (project.id === UsersByTrade[default_trade][u].visible_projects[0]) {\n          user = UsersByTrade[default_trade][u];\n        }\n      }\n      if (!user) {\n        scheduled = false;\n      }\n    } else {\n      user = UsersByTrade[default_trade][Math.floor(Math.random()*UsersByTrade[default_trade].length)];\n    }\n  } else {\n    scheduled = false;\n  }\n\n  let tasks = GenerateTasks(name, scheduled, progress);\n\n  progress = 0;\n  for (let t=0; t<tasks.length; t++) {\n    if (tasks[t].completed) {\n      progress++;\n    }\n  }\n\n  var job = {\n    start_date: scheduled ? new Date(date.getFullYear(), date.getMonth(), date.getDate(), start_time ) : null,\n    end_date: scheduled ? new Date(date.getFullYear(), date.getMonth(), date.getDate(), end_time, -Math.round(Math.random()*10) ) : null,\n    assigned_user: scheduled ? user.user_id : null,\n    project_id: project.id,\n    project_color: project.color,\n    project_name: project.name,\n    default_trade: default_trade,\n    name: name,\n    icon: JobIcons[name] || DefaultJobIcon,\n    progress: scheduled ? Math.round(100*(progress / tasks.length)) || 0 : 0,//scheduled ? Math.min(Math.round(Math.random()*200),100) : 0,\n    id: id,\n    tasks: tasks\n  };\n  if (user) {\n    user.jobs.push(job.id);\n  }\n\n  return job;\n}\n\nexport let JobsByMonth = {\n};\n\nexport let JobsById = {\n};\n\nexport let UsersById = {\n};\n\nexport let UsersByTrade = {\n  Customer:[]\n};\n\nexport function CreateCustomerUser (project) {\n  const user = {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"\",\n  \t\"last_name\": project.name.substr(0,project.name.indexOf(' ')),\n  \t\"trade_name\": \"Customer\",\n    visible_projects: [project.id]\n  };\n\n  UsersByTrade[\"Customer\"].push(user);\n  Users.push(user);\n}\n\nexport function GenerateProjectJobs () {\n  const today = new Date();\n  let weekend_ref = {};\n  for (let w=0; w<WEEKEND.length; w++) {\n    weekend_ref[WEEKEND[w]] = true;\n  }\n  for (let u=0; u<Users.length; u++) {\n    const user = Users[u];\n    UsersByTrade[user.trade_name] = UsersByTrade[user.trade_name] || [];\n    UsersByTrade[user.trade_name].push(user);\n  }\n  for (let p=0; p<ProjectList.length; p++) {\n    let project = ProjectList[p];\n    let start_date = new Date(today.getFullYear(), today.getMonth(), today.getDate()-(p*2));//Math.round(project.temp_progress*2));\n    let weekend_adjuster = 0;\n\n    CreateCustomerUser(project);\n\n    for (let t=0; t<project.temp_jobs.length; t++) {\n\n      let date = new Date(start_date.getFullYear(), start_date.getMonth(), start_date.getDate()+t+weekend_adjuster);\n      let progress = t < p ? 100 :\n                      t === p ? Math.min(Math.round(Math.random()*100),100) : 0;\n      while (weekend_ref[date.getDay()]) {\n        weekend_adjuster++;\n        date = new Date(start_date.getFullYear(), start_date.getMonth(), start_date.getDate()+t+weekend_adjuster);\n      }\n      const job = GenerateJob(\n        project,\n        project.temp_jobs[t],\n        date,\n        (progress === 0 ? !!Math.round(Math.random()*100%4) : true),\n        progress\n      );\n      project.jobs.push(job.id);\n      if (!JobsByMonth[date.getFullYear() + \"_\" + date.getMonth()]) {\n        JobsByMonth[date.getFullYear() + \"_\" + date.getMonth()] = [];\n      }\n      JobsByMonth[date.getFullYear() + \"_\" + date.getMonth()].push(job);\n      JobsById[job.id] = job;\n    }\n  }\n}\n\n\nexport let ProjectList = [\n  {\n    name: \"Scott Livingroom Remodel\",\n    color: GenerateRandomColor(),//\"hsl(\"+GenerateRandomColor()+\", 80%, 40%)\",\n    id: 100,\n    jobs:[],\n    temp_progress: Math.round(Math.random()*100) % 5,\n    temp_jobs: [\n      \"Sign Contract\",\n      \"Pre Deposit\",\n      \"Estimation\",\n      \"Demolition\",\n      \"Protection\",\n      \"Tile Installation\",\n      \"Clean Up\",\n      \"Inspection\",\n      \"Final Payment\"\n    ]\n  },\n  {\n    name: \"Johnson Kitchen Remodel\",\n    color: GenerateRandomColor(),//\"hsl(\"+GenerateRandomColor()+\", 80%, 40%)\",\n    id: 200,\n    jobs:[],\n    temp_progress: Math.round(Math.random()*100) % 5,\n    temp_jobs: [\n      \"Sign Contract\",\n      \"Pre Deposit\",\n      \"Estimation\",\n      \"Demolition\",\n      \"Protection\",\n      \"Tile Installation\",\n      \"Plumbing\",\n      \"Clean Up\",\n      \"Inspection\",\n      \"Final Payment\"\n    ]\n  },\n  {\n    name: \"Smith Bathroom Remodel\",\n    color: GenerateRandomColor(),//\"hsl(\"+GenerateRandomColor()+\", 80%, 40%)\",\n    id: 300,\n    jobs:[],\n    temp_progress: Math.round(Math.random()*100) % 5,\n    temp_jobs: [\n      \"Sign Contract\",\n      \"Pre Deposit\",\n      \"Estimation\",\n      \"Demolition\",\n      \"Protection\",\n      \"Tile Installation\",\n      \"Plumbing\",\n      \"Clean Up\",\n      \"Inspection\",\n      \"Final Payment\"\n    ]\n  },\n  {\n    name: \"Osborn Kitchen Tile\",\n    color: GenerateRandomColor(),//\"hsl(\"+GenerateRandomColor()+\", 80%, 40%)\",\n    id: 400,\n    jobs:[],\n    temp_progress: Math.round(Math.random()*100) % 5,\n    temp_jobs: [\n      \"Sign Contract\",\n      \"Pre Deposit\",\n      \"Estimation\",\n      \"Demolition\",\n      \"Protection\",\n      \"Hardwood Installation\",\n      \"Plumbing\",\n      \"Clean Up\",\n      \"Inspection\",\n      \"Final Payment\"\n    ]\n  },\n  {\n    name: \"Harmon Home Exterior\",\n    color: GenerateRandomColor(),//\"hsl(\"+GenerateRandomColor()+\", 80%, 40%)\",\n    id: 500,\n    jobs:[],\n    temp_progress: Math.round(Math.random()*100) % 5,\n    temp_jobs: [\n      \"Sign Contract\",\n      \"Pre Deposit\",\n      \"Estimation\",\n      \"Demolition\",\n      \"Protection\",\n      \"Tile Installation\",\n      \"Clean Up\",\n      \"Inspection\",\n      \"Final Payment\"\n    ]\n  },\n  {\n    name: \"Burke Bathroom Remodel\",\n    color: GenerateRandomColor(),//\"hsl(\"+GenerateRandomColor()+\", 80%, 40%)\",\n    id: 600,\n    jobs:[],\n    temp_progress: Math.round(Math.random()*100) % 5,\n    temp_jobs: [\n      \"Sign Contract\",\n      \"Pre Deposit\",\n      \"Estimation\",\n      \"Demolition\",\n      \"Protection\",\n      \"Tile Installation\",\n      \"Plumbing\",\n      \"Clean Up\",\n      \"Inspection\",\n      \"Final Payment\"\n    ]\n  },\n];\n\n\n\nexport const Users = [\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Tmc Builders Inc\",\n    \"last_name\":\"\",\n    \"trade_name\":\"Contractor,Plumber\"\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Wood N'Things Llc\",\n    \"last_name\":\"\",\n    \"trade_name\":\"Contractor\"\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Cabinet Pros\",\n    \"last_name\":\"\",\n    \"trade_name\":\"Contractor\"\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Gilman Contractors Inc\",\n    \"last_name\":\"\",\n    \"trade_name\":\"Contractor\"\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Crowne Closets & Cabinetry\",\n    \"last_name\":\"\",\n    \"trade_name\":\"Contractor\"\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"The Structures Group Southwest Inc\",\n    \"last_name\":\"\",\n    \"trade_name\":\"Contractor\"\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"B Smith Construction Inc\",\n    \"last_name\":\"\",\n    \"trade_name\":\"Contractor\"\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Turner CO\",\n    \"last_name\":\"\",\n    \"trade_name\":\"Contractor\"\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Tower Mechanical Sv\",\n    \"last_name\":\"\",\n    \"trade_name\":\"Contractor\"\n  },\n\n\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Rice\",\n  \t\"last_name\": \"Werthmann\",\n  \t\"trade_name\": Trades[6]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Ollen\",\n  \t\"last_name\": \"Hampshire\",\n  \t\"trade_name\": Trades[5]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Michael\",\n  \t\"last_name\": \"Goermar\",\n  \t\"trade_name\": Trades[4]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Dianne\",\n  \t\"last_name\": \"Rossini\",\n  \t\"trade_name\": Trades[3]+\",Plumber\"\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Marjan\",\n  \t\"last_name\": \"Berishaj\",\n  \t\"trade_name\": Trades[2]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Robert\",\n  \t\"last_name\": \"Hudson\",\n  \t\"trade_name\": Trades[1]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Jeremy\",\n  \t\"last_name\": \"Tilton\",\n  \t\"trade_name\": Trades[0]+\",Plumber\"\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Lance\",\n  \t\"last_name\": \"Keever\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Manuel\",\n  \t\"last_name\": \"Patridge\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Herbert\",\n  \t\"last_name\": \"Baylor\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Jorge\",\n  \t\"last_name\": \"Brzezinski\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Calvin\",\n  \t\"last_name\": \"Youngquist\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Richard\",\n  \t\"last_name\": \"Sturtz\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Hugh\",\n  \t\"last_name\": \"Raymond\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Adrian\",\n  \t\"last_name\": \"Beutel\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Samuel\",\n  \t\"last_name\": \"Manwaring\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Tony\",\n  \t\"last_name\": \"Hallowell\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Randy\",\n  \t\"last_name\": \"Drumm\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Tim\",\n  \t\"last_name\": \"Geist\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Glen\",\n  \t\"last_name\": \"Lotz\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Jamie\",\n  \t\"last_name\": \"Bare\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Adrian\",\n  \t\"last_name\": \"Cabana\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Albert\",\n  \t\"last_name\": \"Mossman\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Richard\",\n  \t\"last_name\": \"Spikes\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Alexander\",\n  \t\"last_name\": \"Tanksley\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Earl\",\n  \t\"last_name\": \"Rutledge\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Leon\",\n  \t\"last_name\": \"Blasi\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Jerome\",\n  \t\"last_name\": \"Deegan\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Edgar\",\n  \t\"last_name\": \"Christine\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Thomas\",\n  \t\"last_name\": \"Alvardo\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  },\n  {\n    \"jobs\":[],\n    \"user_id\": Math.random(),\n    \"first_name\":\"Alexander\",\n  \t\"last_name\": \"Guidi\",\n  \t\"trade_name\": Trades[TradeDistributor[Math.floor(Math.random()*TradeDistributor.length)]]\n  }\n];\n\n\n\nGenerateProjectJobs();\n"]},"metadata":{},"sourceType":"module"}