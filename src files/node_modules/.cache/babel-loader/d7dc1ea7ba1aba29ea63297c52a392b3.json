{"ast":null,"code":"import _classCallCheck from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matt/Work/Projul/projul-prototype/src/components/user-heatmap.js\";\nimport React from 'react';\nimport { WEEKEND, DAILY_WORK_HOURS } from '../config/account-settings';\nimport { DaysInMonth } from '../utilities/date';\n\nvar Scheduler =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Scheduler, _React$Component);\n\n  function Scheduler() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Scheduler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Scheduler)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.SelectDate = function (e) {\n      // let id=parseInt(e.currentTarget.dataset.id,10);\n      console.log(e.target.value);\n\n      _this.setState({\n        sort: e.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Scheduler, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var days = [];\n\n      for (var d = 0; d < DaysInMonth(this.props.month, this.props.year); d++) {\n        days.push(Math.min(Math.round(Math.random() * DAILY_WORK_HOURS), DAILY_WORK_HOURS));\n      }\n\n      setTimeout(function () {\n        _this2.setState({\n          days: days\n        });\n      }, 100);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var cells = [];\n      var classes = [\"tasks-0\", \"tasks-1\", \"tasks-2\", \"tasks-3\", \"tasks-4\", \"tasks-5\", \"tasks-6\", \"tasks-7\", \"tasks-8\"];\n\n      if (this.state.days) {\n        for (var i = 0; i < DaysInMonth(this.props.month, this.props.year); i++) {\n          var value = this.state.days[i];\n          var weekend = \"\"; //TODO remove this:\n\n          var current_date = new Date(this.props.year, this.props.month, i + 1);\n\n          for (var w = 0; w < WEEKEND.length; w++) {\n            if (current_date.getDay() === WEEKEND[w]) {\n              value = 0;\n              weekend = \" weekend\";\n            }\n          }\n\n          cells.push(React.createElement(\"li\", {\n            key: this.props.user.user_id + \"_\" + i,\n            className: \"cell \" + classes[Math.min(Math.round(value * 8 / DAILY_WORK_HOURS), classes.length - 1)] + weekend + (current_date.toDateString() === new Date().toDateString() ? \" today\" : \"\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, value ? value + \" hrs\" : \"\"));\n        }\n      }\n\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, cells);\n    }\n  }]);\n\n  return Scheduler;\n}(React.Component);\n\nexport default Scheduler;","map":{"version":3,"sources":["/Users/matt/Work/Projul/projul-prototype/src/components/user-heatmap.js"],"names":["React","WEEKEND","DAILY_WORK_HOURS","DaysInMonth","Scheduler","state","SelectDate","e","console","log","target","value","setState","sort","days","d","props","month","year","push","Math","min","round","random","setTimeout","cells","classes","i","weekend","current_date","Date","w","length","getDay","user","user_id","toDateString","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {WEEKEND, DAILY_WORK_HOURS} from '../config/account-settings'\nimport {DaysInMonth} from '../utilities/date'\n\nclass Scheduler extends React.Component {\n  state = {\n\n  };\n\n  componentDidMount() {\n    const days = [];\n    for (var d=0; d<DaysInMonth(this.props.month, this.props.year); d++) {\n      days.push(Math.min(Math.round(Math.random()*DAILY_WORK_HOURS),DAILY_WORK_HOURS));\n    }\n    setTimeout(()=>{\n      this.setState({\n        days: days\n      });\n    }, 100);\n  }\n\n  SelectDate = (e) => {\n    // let id=parseInt(e.currentTarget.dataset.id,10);\n    console.log(e.target.value);\n    this.setState({sort: e.target.value});\n  }\n\n  render() {\n    const cells = [];\n    const classes = [\n      \"tasks-0\",\n      \"tasks-1\",\n      \"tasks-2\",\n      \"tasks-3\",\n      \"tasks-4\",\n      \"tasks-5\",\n      \"tasks-6\",\n      \"tasks-7\",\n      \"tasks-8\"\n    ];\n\n    if (this.state.days) {\n      for (var i=0; i<DaysInMonth(this.props.month, this.props.year); i++) {\n        const value = this.state.days[i];\n        const weekend = \"\";\n        //TODO remove this:\n        const current_date = new Date(this.props.year, this.props.month, (i+1));\n        for (var w=0; w<WEEKEND.length; w++) {\n          if (current_date.getDay() === WEEKEND[w]) {\n            value = 0;\n            weekend = \" weekend\";\n          }\n        }\n        cells.push((\n          <li key={this.props.user.user_id + \"_\" + i} className={\"cell \" +\n            (classes[Math.min(Math.round(value*8/DAILY_WORK_HOURS),classes.length-1)]) +\n            weekend +\n            ((current_date.toDateString() === (new Date()).toDateString()) ? \" today\" : \"\")\n          }>{\n            value?value+\" hrs\":\"\"\n          }</li>\n        ));\n      }\n    }\n\n    return (\n      <ul>\n        {cells}\n      </ul>\n    );\n  }\n}\n\nexport default Scheduler\n"]},"metadata":{},"sourceType":"module"}