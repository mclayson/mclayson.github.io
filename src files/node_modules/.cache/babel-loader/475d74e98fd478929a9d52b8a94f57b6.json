{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _frappeGantt = require('frappe-gantt');\n\nvar _frappeGantt2 = _interopRequireDefault(_frappeGantt);\n\nvar _sizeSensor = require('size-sensor');\n\nvar _helper = require('./helper');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ReactGantt = function (_Component) {\n  _inherits(ReactGantt, _Component);\n\n  function ReactGantt() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ReactGantt);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ReactGantt.__proto__ || Object.getPrototypeOf(ReactGantt)).call.apply(_ref, [this].concat(args))), _this), _this.ganttRef = undefined, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ReactGantt, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.renderFrappeGanttDOM();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    // redraw the gantt when update. now change the viewMode\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.ganttInst) {\n        this.ganttInst.refresh(this.props.tasks); // 不相等才刷新\n\n        if (this.props.viewMode !== prevProps.viewMode) {\n          this.ganttInst.change_view_mode(this.props.viewMode);\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      (0, _sizeSensor.clear)(this.ganttRef);\n    }\n    /**\n     * render the gantt chart\n     * @returns {GanttJS}\n     */\n\n  }, {\n    key: 'renderFrappeGanttDOM',\n    value: function renderFrappeGanttDOM() {\n      var _this2 = this; // init the Gantt\n      // if exist, return\n\n\n      if (this.ganttInst) return this.ganttInst;\n      var _props = this.props,\n          onClick = _props.onClick,\n          onDateChange = _props.onDateChange,\n          onProgressChange = _props.onProgressChange,\n          onViewChange = _props.onViewChange,\n          customPopupHtml = _props.customPopupHtml,\n          tasks = _props.tasks,\n          viewMode = _props.viewMode; // when resize\n\n      (0, _sizeSensor.bind)(this.ganttRef, function () {\n        if (_this2.ganttInst) {\n          _this2.ganttInst.refresh(_this2.props.tasks);\n        }\n      }); // new instance\n\n      this.ganttInst = new _frappeGantt2.default(this.ganttRef, tasks, {\n        on_click: onClick || _helper.noop,\n        on_date_change: onDateChange || _helper.noop,\n        on_progress_change: onProgressChange || _helper.noop,\n        on_view_change: onViewChange || _helper.noop,\n        custom_popup_html: customPopupHtml || null\n      }); // change view mode\n\n      this.ganttInst.change_view_mode(viewMode);\n      return this.ganttInst;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      return _react2.default.createElement('svg', {\n        ref: function ref(node) {\n          _this3.ganttRef = node;\n        }\n      });\n    }\n  }]);\n\n  return ReactGantt;\n}(_react.Component);\n\nexports.default = ReactGantt;\n;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}