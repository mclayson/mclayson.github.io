{"ast":null,"code":"import _classCallCheck from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar Popup =\n/*#__PURE__*/\nfunction () {\n  function Popup(parent, custom_html) {\n    _classCallCheck(this, Popup);\n\n    this.parent = parent;\n    this.custom_html = custom_html;\n    this.make();\n  }\n\n  _createClass(Popup, [{\n    key: \"make\",\n    value: function make() {\n      this.parent.innerHTML = \"\\n            <div class=\\\"title\\\"></div>\\n            <div class=\\\"subtitle\\\"></div>\\n            <div class=\\\"pointer\\\"></div>\\n        \";\n      this.hide();\n      this.title = this.parent.querySelector('.title');\n      this.subtitle = this.parent.querySelector('.subtitle');\n      this.pointer = this.parent.querySelector('.pointer');\n    }\n  }, {\n    key: \"show\",\n    value: function show(options) {\n      if (!options.target_element) {\n        throw new Error('target_element is required to show popup');\n      }\n\n      if (!options.position) {\n        options.position = 'left';\n      }\n\n      var target_element = options.target_element;\n\n      if (this.custom_html) {\n        var html = this.custom_html(options.task);\n        html += '<div class=\"pointer\"></div>';\n        this.parent.innerHTML = html;\n        this.pointer = this.parent.querySelector('.pointer');\n      } else {\n        // set data\n        this.title.innerHTML = options.title;\n        this.subtitle.innerHTML = options.subtitle;\n        this.parent.style.width = this.parent.clientWidth + 'px';\n      } // set position\n\n\n      var position_meta;\n\n      if (target_element instanceof HTMLElement) {\n        position_meta = target_element.getBoundingClientRect();\n      } else if (target_element instanceof SVGElement) {\n        position_meta = options.target_element.getBBox();\n      }\n\n      if (options.position === 'left') {\n        this.parent.style.left = position_meta.x + (position_meta.width + 10) + 'px';\n        this.parent.style.top = position_meta.y + 'px';\n        this.pointer.style.transform = 'rotateZ(90deg)';\n        this.pointer.style.left = '-7px';\n        this.pointer.style.top = '2px';\n      } // show\n\n\n      this.parent.style.opacity = 1;\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.parent.style.opacity = 0;\n    }\n  }]);\n\n  return Popup;\n}();\n\nexport { Popup as default };","map":null,"metadata":{},"sourceType":"module"}