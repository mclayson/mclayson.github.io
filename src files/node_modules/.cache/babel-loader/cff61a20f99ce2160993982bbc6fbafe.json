{"ast":null,"code":"import _classCallCheck from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matt/Work/Projul/projul-prototype/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matt/Work/Projul/projul-prototype/src/components/user-heatmap.js\";\nimport React from 'react';\nimport { WEEKEND, DAILY_WORK_HOURS } from '../config/account-settings';\nimport { DaysInMonth, SameDay } from '../utilities/date';\nimport { JobsById } from '../utilities/content';\n\nvar Scheduler =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Scheduler, _React$Component);\n\n  function Scheduler() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Scheduler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Scheduler)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selected_day: 0,\n      jobs_by_day: [],\n      jobs_by_id: {}\n    };\n\n    _this.handleDayClick = function (e) {\n      var id = parseInt(e.currentTarget.dataset.id, 10);\n      var index = parseInt(e.currentTarget.dataset.index, 10);\n\n      _this.props.handleDayClick(id, index);\n    };\n\n    _this.handleJobClick = function (e) {\n      var id = e.currentTarget.dataset.id;\n      var project_id = e.currentTarget.dataset.project;\n\n      _this.props.handleJobClick(project_id, id);\n    };\n\n    return _this;\n  }\n\n  _createClass(Scheduler, [{\n    key: \"calcJobsByDay\",\n    // generateJobs = () => {\n    //   let jobs_by_day = [];\n    //   let jobs_by_id = {};\n    //\n    //   const today = new Date();\n    //   const next_week = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 7);\n    //   const past_number_chart = [3,8,8,0,7,1,7,7,5,6,6,5,5,6,7,8,8,8,8];\n    //   const number_chart = [0,0,0,0,0,1,1,2,2,3,4,5,5,6,7,8,8,8,8];\n    //   const future_number_chart = [0,0,0,0,0,1,1,2,0,3,0,5,0,0,0,0,0,0,8];\n    //\n    //   for (var d=0; d<DaysInMonth(this.props.month, this.props.year); d++) {\n    //     let day_jobs = [];\n    //     const current_date = new Date(this.props.year, this.props.month, (d+1));\n    //     if (this.props.selected_job.start_date && SameDay(this.props.selected_job.start_date, current_date) && this.props.selected_job.assigned_user === this.props.user.user_id) {\n    //       // day_jobs.push(this.generateJob({...this.props.selected_job}));\n    //     }\n    //     // RANDOMLY ASSIGN A NUMBER OF HOURS BASED ON IF THE CURRENT_DATE IS BEFORE TODAY, WITHIN A WEEK OR BEYOND A WEEK\n    //     const number_of_hours = (current_date < today) ? Math.min(past_number_chart[Math.floor(Math.random()*past_number_chart.length)],DAILY_WORK_HOURS) :\n    //                             (current_date > next_week) ? Math.min(future_number_chart[Math.floor(Math.random()*future_number_chart.length)],DAILY_WORK_HOURS) :\n    //                             Math.min(number_chart[Math.floor(Math.random()*number_chart.length)],DAILY_WORK_HOURS);\n    //     const number_of_jobs = Math.ceil(Math.random()*number_of_hours)\n    //     //\n    //     if (number_of_hours>0) {\n    //       var last_end_time = 6;\n    //       for (var t=0; t<number_of_jobs; t++) {\n    //         var start_time = last_end_time+(Math.round(number_of_hours/number_of_jobs)+(Math.random()));\n    //         var end_time = start_time+(number_of_hours/number_of_jobs);\n    //         var id = \"job-\"+d+\"-\"+t;\n    //         var job = {\n    //           start_date: new Date(this.props.year, this.props.month, (d+1), start_time ),\n    //           end_date: new Date(this.props.year, this.props.month, (d+1), end_time, -Math.round(Math.random()*10) ),\n    //           assigned_user: this.props.user.user_id,\n    //           project_data: ProjectList[Math.floor(Math.random()*ProjectList.length)],\n    //           name: \"Job\",\n    //           icon: \"fas fa-hammer\",\n    //           progress: 0,\n    //           id: id\n    //         };\n    //         day_jobs.push(job);\n    //         last_end_time = end_time;\n    //         jobs_by_id[id] = job;\n    //       }\n    //     }\n    //     jobs_by_day.push(day_jobs);\n    //   }\n    //   this.setState({\n    //     jobs_by_id: jobs_by_id\n    //   })\n    //   return jobs_by_day;\n    // }\n    //\n    value: function calcJobsByDay() {\n      var jobs_by_day = [];\n\n      for (var d = 0; d < DaysInMonth(this.props.month, this.props.year); d++) {\n        jobs_by_day.push([]);\n      }\n\n      for (var t = 0; t < this.props.user.jobs.length; t++) {\n        var job_id = this.props.user.jobs[t];\n        var job = JobsById[job_id];\n\n        if (job.start_date && job.start_date.getMonth() === this.props.month) {\n          jobs_by_day[job.start_date.getDate() - 1].push(job);\n        }\n      }\n\n      return jobs_by_day;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var jobs_by_day = this.calcJobsByDay(); // setTimeout(()=>{\n\n      this.setState({\n        jobs_by_day: jobs_by_day\n      }); // }, 100);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.month !== prevProps.month) {\n        this.setState({\n          jobs_by_day: this.calcJobsByDay()\n        });\n      }\n\n      if (this.props.selected_day && this.props.selected_day !== prevProps.selected_day) {\n        this.setState({\n          selected_day: this.props.selected_day\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var cells = [];\n      var day_cells = [];\n      var classes = [\"jobs-0\", \"jobs-1\", \"jobs-2\", \"jobs-3\", \"jobs-4\", \"jobs-5\", \"jobs-6\", \"jobs-7\", \"jobs-8\"];\n\n      if (this.state.jobs_by_day && this.state.jobs_by_day.length === DaysInMonth(this.props.month, this.props.year)) {\n        for (var i = 0; i < DaysInMonth(this.props.month, this.props.year); i++) {\n          var current_date = new Date(this.props.year, this.props.month, i + 1);\n          var value = 0;\n\n          for (var t = 0; t < this.state.jobs_by_day[i].length; t++) {\n            var job = this.state.jobs_by_day[i][t];\n            var job_duration = (job.end_date - job.start_date) / 1000 / 60 / 60;\n            value += job_duration;\n          }\n\n          var weekend = \"\"; // value = Math.max(value,0);\n\n          for (var w = 0; w < WEEKEND.length; w++) {\n            if (current_date.getDay() === WEEKEND[w]) {\n              // value = 0;\n              weekend = \" weekend\";\n            }\n          }\n\n          cells.push(React.createElement(\"li\", {\n            key: this.props.user.user_id + \"_\" + i,\n            \"data-id\": i + 1,\n            \"data-index\": this.props.index,\n            className: \"cell \" + classes[Math.min(Math.round(value * 8 / DAILY_WORK_HOURS), classes.length - 1)] + weekend + (current_date.toDateString() === new Date().toDateString() || this.props.month / 20 + this.props.year > new Date().getMonth() / 20 + new Date().getFullYear() && i === 0 ? \" today\" : \"\") + (this.props.selected_job_data.start_date && SameDay(this.props.selected_job_data.start_date, current_date) && this.props.selected_job_data.assigned_user === this.props.user.user_id ? \" assigned\" : \"\"),\n            onClick: this.handleDayClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, value ? Math.round(value * 10) / 10 + \" hrs\" : \"\"));\n        } // The Day view\n\n\n        if (this.state.selected_day && this.state.jobs_by_day[this.state.selected_day - 1]) {\n          for (var h = 0; h < 24; h++) {\n            // const current_time = new Date(this.props.year, this.props.month, this.state.selected_day, h);\n            day_cells.push(React.createElement(\"li\", {\n              key: \"hour-\" + h,\n              className: \"day-cell\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 169\n              },\n              __self: this\n            }));\n          } //Represent Jobs on Day View\n\n\n          for (t = 0; t < this.state.jobs_by_day[this.state.selected_day - 1].length; t++) {\n            var _job = this.state.jobs_by_day[this.state.selected_day - 1][t];\n\n            var _job_duration = (_job.end_date - _job.start_date) / 1000 / 60 / 60 / 24 * 100;\n\n            var job_start = (_job.start_date - new Date(this.props.year, this.props.month, this.state.selected_day)) / 1000 / 60 / 60 / 24 * 100; // if (this.props.user.trade_name !== \"Customer\" || job.project_id === this.props.selected_job_data.project_id) {\n\n            day_cells.push(React.createElement(\"li\", {\n              key: \"job-\" + t,\n              \"data-id\": _job.id,\n              \"data-project\": _job.project_id,\n              className: \"job\" + (_job.id === this.props.selected_job ? \" selected\" : \"\"),\n              style: {\n                left: job_start + \"%\",\n                maxWidth: _job_duration + \"%\",\n                minWidth: _job_duration + \"%\",\n                backgroundColor: _job.project_color\n              },\n              onClick: this.handleJobClick,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 186\n              },\n              __self: this\n            }, React.createElement(\"h4\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 204\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: _job.icon,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 205\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 206\n              },\n              __self: this\n            }, React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 206\n              },\n              __self: this\n            }, _job.name))), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 208\n              },\n              __self: this\n            }, _job.project_name))); // }\n          }\n        }\n      }\n\n      return React.createElement(\"ul\", {\n        className: this.props.selected_day ? \"show-day\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"day-schedule\",\n        style: {\n          // transformOrigin: ((this.state.selected_day/DaysInMonth(this.props.month, this.props.year))*100) + \"% 0\"\n          transition: \"opacity .5s ease, transform 0s ease 1s\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, day_cells)), cells);\n    }\n  }]);\n\n  return Scheduler;\n}(React.Component);\n\nexport default Scheduler;","map":{"version":3,"sources":["/Users/matt/Work/Projul/projul-prototype/src/components/user-heatmap.js"],"names":["React","WEEKEND","DAILY_WORK_HOURS","DaysInMonth","SameDay","JobsById","Scheduler","state","selected_day","jobs_by_day","jobs_by_id","handleDayClick","e","id","parseInt","currentTarget","dataset","index","props","handleJobClick","project_id","project","d","month","year","push","t","user","jobs","length","job_id","job","start_date","getMonth","getDate","calcJobsByDay","setState","prevProps","cells","day_cells","classes","i","current_date","Date","value","job_duration","end_date","weekend","w","getDay","user_id","Math","min","round","toDateString","getFullYear","selected_job_data","assigned_user","h","job_start","selected_job","left","maxWidth","minWidth","backgroundColor","project_color","icon","name","project_name","transition","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {WEEKEND, DAILY_WORK_HOURS} from '../config/account-settings'\nimport {DaysInMonth, SameDay} from '../utilities/date'\nimport {JobsById} from '../utilities/content'\n\nclass Scheduler extends React.Component {\n  state = {\n    selected_day:0,\n    jobs_by_day:[],\n    jobs_by_id:{}\n  };\n\n\n  // generateJobs = () => {\n  //   let jobs_by_day = [];\n  //   let jobs_by_id = {};\n  //\n  //   const today = new Date();\n  //   const next_week = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 7);\n  //   const past_number_chart = [3,8,8,0,7,1,7,7,5,6,6,5,5,6,7,8,8,8,8];\n  //   const number_chart = [0,0,0,0,0,1,1,2,2,3,4,5,5,6,7,8,8,8,8];\n  //   const future_number_chart = [0,0,0,0,0,1,1,2,0,3,0,5,0,0,0,0,0,0,8];\n  //\n  //   for (var d=0; d<DaysInMonth(this.props.month, this.props.year); d++) {\n  //     let day_jobs = [];\n  //     const current_date = new Date(this.props.year, this.props.month, (d+1));\n  //     if (this.props.selected_job.start_date && SameDay(this.props.selected_job.start_date, current_date) && this.props.selected_job.assigned_user === this.props.user.user_id) {\n  //       // day_jobs.push(this.generateJob({...this.props.selected_job}));\n  //     }\n  //     // RANDOMLY ASSIGN A NUMBER OF HOURS BASED ON IF THE CURRENT_DATE IS BEFORE TODAY, WITHIN A WEEK OR BEYOND A WEEK\n  //     const number_of_hours = (current_date < today) ? Math.min(past_number_chart[Math.floor(Math.random()*past_number_chart.length)],DAILY_WORK_HOURS) :\n  //                             (current_date > next_week) ? Math.min(future_number_chart[Math.floor(Math.random()*future_number_chart.length)],DAILY_WORK_HOURS) :\n  //                             Math.min(number_chart[Math.floor(Math.random()*number_chart.length)],DAILY_WORK_HOURS);\n  //     const number_of_jobs = Math.ceil(Math.random()*number_of_hours)\n  //     //\n  //     if (number_of_hours>0) {\n  //       var last_end_time = 6;\n  //       for (var t=0; t<number_of_jobs; t++) {\n  //         var start_time = last_end_time+(Math.round(number_of_hours/number_of_jobs)+(Math.random()));\n  //         var end_time = start_time+(number_of_hours/number_of_jobs);\n  //         var id = \"job-\"+d+\"-\"+t;\n  //         var job = {\n  //           start_date: new Date(this.props.year, this.props.month, (d+1), start_time ),\n  //           end_date: new Date(this.props.year, this.props.month, (d+1), end_time, -Math.round(Math.random()*10) ),\n  //           assigned_user: this.props.user.user_id,\n  //           project_data: ProjectList[Math.floor(Math.random()*ProjectList.length)],\n  //           name: \"Job\",\n  //           icon: \"fas fa-hammer\",\n  //           progress: 0,\n  //           id: id\n  //         };\n  //         day_jobs.push(job);\n  //         last_end_time = end_time;\n  //         jobs_by_id[id] = job;\n  //       }\n  //     }\n  //     jobs_by_day.push(day_jobs);\n  //   }\n  //   this.setState({\n  //     jobs_by_id: jobs_by_id\n  //   })\n  //   return jobs_by_day;\n  // }\n  //\n  calcJobsByDay () {\n    var jobs_by_day = [];\n    for (var d=0; d<DaysInMonth(this.props.month, this.props.year); d++) {\n      jobs_by_day.push([]);\n    }\n\n    for (var t=0; t<this.props.user.jobs.length; t++) {\n      const job_id = this.props.user.jobs[t];\n      let job = JobsById[job_id];\n      if (job.start_date && job.start_date.getMonth() === this.props.month) {\n        jobs_by_day[job.start_date.getDate()-1].push(job);\n      }\n    }\n    return jobs_by_day;\n  }\n  componentDidMount() {\n    var jobs_by_day = this.calcJobsByDay();\n    // setTimeout(()=>{\n      this.setState({\n        jobs_by_day: jobs_by_day\n      });\n    // }, 100);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.month !== prevProps.month) {\n      this.setState({\n        jobs_by_day: this.calcJobsByDay()\n      });\n    }\n    if (this.props.selected_day && this.props.selected_day !== prevProps.selected_day) {\n      this.setState({\n        selected_day: this.props.selected_day\n      });\n    }\n  }\n\n  handleDayClick = (e) => {\n    const id=parseInt(e.currentTarget.dataset.id,10);\n    const index=parseInt(e.currentTarget.dataset.index,10);\n    this.props.handleDayClick(id, index);\n  }\n  handleJobClick = (e) => {\n    const id=e.currentTarget.dataset.id;\n    const project_id=e.currentTarget.dataset.project;\n    this.props.handleJobClick(project_id, id);\n  }\n\n  render() {\n    const cells = [];\n    const day_cells = [];\n    const classes = [\n      \"jobs-0\",\n      \"jobs-1\",\n      \"jobs-2\",\n      \"jobs-3\",\n      \"jobs-4\",\n      \"jobs-5\",\n      \"jobs-6\",\n      \"jobs-7\",\n      \"jobs-8\"\n    ];\n\n    if (this.state.jobs_by_day && this.state.jobs_by_day.length === DaysInMonth(this.props.month, this.props.year)) {\n      for (var i=0; i<DaysInMonth(this.props.month, this.props.year); i++) {\n\n        const current_date = new Date(this.props.year, this.props.month, (i+1));\n        let value = 0;\n        for (var t=0; t<this.state.jobs_by_day[i].length; t++) {\n          const job = this.state.jobs_by_day[i][t];\n          const job_duration = (((job.end_date-job.start_date)/1000)/60/60);\n          value+=job_duration;\n        }\n        let weekend = \"\";\n        // value = Math.max(value,0);\n        for (var w=0; w<WEEKEND.length; w++) {\n          if (current_date.getDay() === WEEKEND[w]) {\n            // value = 0;\n            weekend = \" weekend\";\n          }\n        }\n        cells.push((\n          <li\n            key={this.props.user.user_id + \"_\" + i}\n            data-id={(i+1)}\n            data-index={(this.props.index)}\n            className={\"cell \" +\n              (classes[Math.min(Math.round(value*8/DAILY_WORK_HOURS),classes.length-1)]) +\n              weekend +\n              (((current_date.toDateString() === (new Date()).toDateString()) || (((this.props.month/20)+this.props.year) > (((new Date()).getMonth()/20)+(new Date()).getFullYear()) && i===0)) ? \" today\" : \"\") +\n              (this.props.selected_job_data.start_date && SameDay(this.props.selected_job_data.start_date, current_date) && this.props.selected_job_data.assigned_user === this.props.user.user_id ? \" assigned\" : \"\")\n          } onClick={this.handleDayClick}\n          >{\n            value?(Math.round(value*10)/10)+\" hrs\":\"\"\n          }</li>\n        ));\n      }\n\n      // The Day view\n      if (this.state.selected_day && this.state.jobs_by_day[this.state.selected_day-1]) {\n\n        for (var h=0; h<24; h++) {\n          // const current_time = new Date(this.props.year, this.props.month, this.state.selected_day, h);\n          day_cells.push((\n            <li\n              key={\"hour-\"+h}\n              className={\n                \"day-cell\"\n              }\n            >\n            </li>\n          ));\n        }\n\n        //Represent Jobs on Day View\n        for (t=0; t<this.state.jobs_by_day[this.state.selected_day-1].length; t++) {\n          const job = this.state.jobs_by_day[this.state.selected_day-1][t];\n          const job_duration = (((job.end_date-job.start_date)/1000)/60/60/24)*100;\n          const job_start = ((job.start_date - new Date(this.props.year, this.props.month, this.state.selected_day))/1000/60/60/24)*100;\n          // if (this.props.user.trade_name !== \"Customer\" || job.project_id === this.props.selected_job_data.project_id) {\n            day_cells.push((\n              <li\n                key={\"job-\"+t}\n                data-id={job.id}\n                data-project={job.project_id}\n                className={\n                  \"job\" +\n                  (job.id === this.props.selected_job? \" selected\" : \"\")\n                }\n                style={{\n                  left: job_start+\"%\",\n                  maxWidth: job_duration+\"%\",\n                  minWidth: job_duration+\"%\",\n                  backgroundColor: job.project_color\n                }}\n                onClick={\n                  this.handleJobClick\n                }\n              >\n                <h4>\n                  <i className={job.icon}></i>\n                  <span><strong>{job.name}</strong></span>\n                </h4>\n                <div>{job.project_name}</div>\n              </li>\n            ));\n          // }\n        }\n      }\n    }\n\n    return (\n      <ul className={(this.props.selected_day ? \"show-day\" : \"\")}>\n        <li className={\"day-schedule\"}\n          style={{\n            // transformOrigin: ((this.state.selected_day/DaysInMonth(this.props.month, this.props.year))*100) + \"% 0\"\n            transition: \"opacity .5s ease, transform 0s ease 1s\"\n          }}\n        >\n          <ul>\n            {day_cells}\n          </ul>\n        </li>\n        {cells}\n      </ul>\n    );\n  }\n}\n\nexport default Scheduler\n"]},"metadata":{},"sourceType":"module"}